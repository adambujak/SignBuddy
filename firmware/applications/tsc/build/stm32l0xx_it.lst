ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv6s-m
  19              		.syntax unified
  20              		.code	16
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB47:
  26              		.file 1 "Core/Src/stm32l0xx_it.c"
   1:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN Header */
   2:Core/Src/stm32l0xx_it.c **** /**
   3:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   4:Core/Src/stm32l0xx_it.c ****   * @file    stm32l0xx_it.c
   5:Core/Src/stm32l0xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
   7:Core/Src/stm32l0xx_it.c ****   * @attention
   8:Core/Src/stm32l0xx_it.c ****   *
   9:Core/Src/stm32l0xx_it.c ****   * <h2><center>&copy; Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/stm32l0xx_it.c ****   * All rights reserved.</center></h2>
  11:Core/Src/stm32l0xx_it.c ****   *
  12:Core/Src/stm32l0xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Core/Src/stm32l0xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Core/Src/stm32l0xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Core/Src/stm32l0xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Core/Src/stm32l0xx_it.c ****   *
  17:Core/Src/stm32l0xx_it.c ****   ******************************************************************************
  18:Core/Src/stm32l0xx_it.c ****   */
  19:Core/Src/stm32l0xx_it.c **** /* USER CODE END Header */
  20:Core/Src/stm32l0xx_it.c **** 
  21:Core/Src/stm32l0xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Core/Src/stm32l0xx_it.c **** #include "main.h"
  23:Core/Src/stm32l0xx_it.c **** #include "stm32l0xx_it.h"
  24:Core/Src/stm32l0xx_it.c **** /* Private includes ----------------------------------------------------------*/
  25:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN Includes */
  26:Core/Src/stm32l0xx_it.c **** /* USER CODE END Includes */
  27:Core/Src/stm32l0xx_it.c **** 
  28:Core/Src/stm32l0xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN TD */
  30:Core/Src/stm32l0xx_it.c **** 
  31:Core/Src/stm32l0xx_it.c **** /* USER CODE END TD */
  32:Core/Src/stm32l0xx_it.c **** 
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 2


  33:Core/Src/stm32l0xx_it.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PD */
  35:Core/Src/stm32l0xx_it.c **** 
  36:Core/Src/stm32l0xx_it.c **** /* USER CODE END PD */
  37:Core/Src/stm32l0xx_it.c **** 
  38:Core/Src/stm32l0xx_it.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PM */
  40:Core/Src/stm32l0xx_it.c **** 
  41:Core/Src/stm32l0xx_it.c **** /* USER CODE END PM */
  42:Core/Src/stm32l0xx_it.c **** 
  43:Core/Src/stm32l0xx_it.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PV */
  45:Core/Src/stm32l0xx_it.c **** 
  46:Core/Src/stm32l0xx_it.c **** /* USER CODE END PV */
  47:Core/Src/stm32l0xx_it.c **** 
  48:Core/Src/stm32l0xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN PFP */
  50:Core/Src/stm32l0xx_it.c **** 
  51:Core/Src/stm32l0xx_it.c **** /* USER CODE END PFP */
  52:Core/Src/stm32l0xx_it.c **** 
  53:Core/Src/stm32l0xx_it.c **** /* Private user code ---------------------------------------------------------*/
  54:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN 0 */
  55:Core/Src/stm32l0xx_it.c **** 
  56:Core/Src/stm32l0xx_it.c **** /* USER CODE END 0 */
  57:Core/Src/stm32l0xx_it.c **** 
  58:Core/Src/stm32l0xx_it.c **** /* External variables --------------------------------------------------------*/
  59:Core/Src/stm32l0xx_it.c **** 
  60:Core/Src/stm32l0xx_it.c **** /* USER CODE BEGIN EV */
  61:Core/Src/stm32l0xx_it.c **** 
  62:Core/Src/stm32l0xx_it.c **** /* USER CODE END EV */
  63:Core/Src/stm32l0xx_it.c **** 
  64:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
  65:Core/Src/stm32l0xx_it.c **** /*           Cortex-M0+ Processor Interruption and Exception Handlers          */
  66:Core/Src/stm32l0xx_it.c **** /******************************************************************************/
  67:Core/Src/stm32l0xx_it.c **** /**
  68:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Non maskable interrupt.
  69:Core/Src/stm32l0xx_it.c ****   */
  70:Core/Src/stm32l0xx_it.c **** void NMI_Handler(void)
  71:Core/Src/stm32l0xx_it.c **** {
  27              		.loc 1 71 1
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              	.LCFI0:
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 7, -8
  35              		.cfi_offset 14, -4
  36 0002 00AF     		add	r7, sp, #0
  37              	.LCFI1:
  38              		.cfi_def_cfa_register 7
  39              	.L2:
  72:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  73:Core/Src/stm32l0xx_it.c **** 
  74:Core/Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  75:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  76:Core/Src/stm32l0xx_it.c ****   while (1)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 3


  40              		.loc 1 76 9 discriminator 1
  41 0004 FEE7     		b	.L2
  42              		.cfi_endproc
  43              	.LFE47:
  45              		.section	.text.HardFault_Handler,"ax",%progbits
  46              		.align	1
  47              		.global	HardFault_Handler
  48              		.syntax unified
  49              		.code	16
  50              		.thumb_func
  51              		.fpu softvfp
  53              	HardFault_Handler:
  54              	.LFB48:
  77:Core/Src/stm32l0xx_it.c ****   {
  78:Core/Src/stm32l0xx_it.c ****   }
  79:Core/Src/stm32l0xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  80:Core/Src/stm32l0xx_it.c **** }
  81:Core/Src/stm32l0xx_it.c **** 
  82:Core/Src/stm32l0xx_it.c **** /**
  83:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Hard fault interrupt.
  84:Core/Src/stm32l0xx_it.c ****   */
  85:Core/Src/stm32l0xx_it.c **** void HardFault_Handler(void)
  86:Core/Src/stm32l0xx_it.c **** {
  55              		.loc 1 86 1
  56              		.cfi_startproc
  57              		@ args = 0, pretend = 0, frame = 0
  58              		@ frame_needed = 1, uses_anonymous_args = 0
  59 0000 80B5     		push	{r7, lr}
  60              	.LCFI2:
  61              		.cfi_def_cfa_offset 8
  62              		.cfi_offset 7, -8
  63              		.cfi_offset 14, -4
  64 0002 00AF     		add	r7, sp, #0
  65              	.LCFI3:
  66              		.cfi_def_cfa_register 7
  67              	.L4:
  87:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  88:Core/Src/stm32l0xx_it.c **** 
  89:Core/Src/stm32l0xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  90:Core/Src/stm32l0xx_it.c ****   while (1)
  68              		.loc 1 90 9 discriminator 1
  69 0004 FEE7     		b	.L4
  70              		.cfi_endproc
  71              	.LFE48:
  73              		.section	.text.SVC_Handler,"ax",%progbits
  74              		.align	1
  75              		.global	SVC_Handler
  76              		.syntax unified
  77              		.code	16
  78              		.thumb_func
  79              		.fpu softvfp
  81              	SVC_Handler:
  82              	.LFB49:
  91:Core/Src/stm32l0xx_it.c ****   {
  92:Core/Src/stm32l0xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  93:Core/Src/stm32l0xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  94:Core/Src/stm32l0xx_it.c ****   }
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 4


  95:Core/Src/stm32l0xx_it.c **** }
  96:Core/Src/stm32l0xx_it.c **** 
  97:Core/Src/stm32l0xx_it.c **** /**
  98:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System service call via SWI instruction.
  99:Core/Src/stm32l0xx_it.c ****   */
 100:Core/Src/stm32l0xx_it.c **** void SVC_Handler(void)
 101:Core/Src/stm32l0xx_it.c **** {
  83              		.loc 1 101 1
  84              		.cfi_startproc
  85              		@ args = 0, pretend = 0, frame = 0
  86              		@ frame_needed = 1, uses_anonymous_args = 0
  87 0000 80B5     		push	{r7, lr}
  88              	.LCFI4:
  89              		.cfi_def_cfa_offset 8
  90              		.cfi_offset 7, -8
  91              		.cfi_offset 14, -4
  92 0002 00AF     		add	r7, sp, #0
  93              	.LCFI5:
  94              		.cfi_def_cfa_register 7
 102:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 0 */
 103:Core/Src/stm32l0xx_it.c **** 
 104:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 0 */
 105:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SVC_IRQn 1 */
 106:Core/Src/stm32l0xx_it.c **** 
 107:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SVC_IRQn 1 */
 108:Core/Src/stm32l0xx_it.c **** }
  95              		.loc 1 108 1
  96 0004 C046     		nop
  97 0006 BD46     		mov	sp, r7
  98              		@ sp needed
  99 0008 80BD     		pop	{r7, pc}
 100              		.cfi_endproc
 101              	.LFE49:
 103              		.section	.text.PendSV_Handler,"ax",%progbits
 104              		.align	1
 105              		.global	PendSV_Handler
 106              		.syntax unified
 107              		.code	16
 108              		.thumb_func
 109              		.fpu softvfp
 111              	PendSV_Handler:
 112              	.LFB50:
 109:Core/Src/stm32l0xx_it.c **** 
 110:Core/Src/stm32l0xx_it.c **** /**
 111:Core/Src/stm32l0xx_it.c ****   * @brief This function handles Pendable request for system service.
 112:Core/Src/stm32l0xx_it.c ****   */
 113:Core/Src/stm32l0xx_it.c **** void PendSV_Handler(void)
 114:Core/Src/stm32l0xx_it.c **** {
 113              		.loc 1 114 1
 114              		.cfi_startproc
 115              		@ args = 0, pretend = 0, frame = 0
 116              		@ frame_needed = 1, uses_anonymous_args = 0
 117 0000 80B5     		push	{r7, lr}
 118              	.LCFI6:
 119              		.cfi_def_cfa_offset 8
 120              		.cfi_offset 7, -8
 121              		.cfi_offset 14, -4
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 5


 122 0002 00AF     		add	r7, sp, #0
 123              	.LCFI7:
 124              		.cfi_def_cfa_register 7
 115:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 116:Core/Src/stm32l0xx_it.c **** 
 117:Core/Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 118:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 119:Core/Src/stm32l0xx_it.c **** 
 120:Core/Src/stm32l0xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 121:Core/Src/stm32l0xx_it.c **** }
 125              		.loc 1 121 1
 126 0004 C046     		nop
 127 0006 BD46     		mov	sp, r7
 128              		@ sp needed
 129 0008 80BD     		pop	{r7, pc}
 130              		.cfi_endproc
 131              	.LFE50:
 133              		.section	.text.SysTick_Handler,"ax",%progbits
 134              		.align	1
 135              		.global	SysTick_Handler
 136              		.syntax unified
 137              		.code	16
 138              		.thumb_func
 139              		.fpu softvfp
 141              	SysTick_Handler:
 142              	.LFB51:
 122:Core/Src/stm32l0xx_it.c **** 
 123:Core/Src/stm32l0xx_it.c **** /**
 124:Core/Src/stm32l0xx_it.c ****   * @brief This function handles System tick timer.
 125:Core/Src/stm32l0xx_it.c ****   */
 126:Core/Src/stm32l0xx_it.c **** void SysTick_Handler(void)
 127:Core/Src/stm32l0xx_it.c **** {
 143              		.loc 1 127 1
 144              		.cfi_startproc
 145              		@ args = 0, pretend = 0, frame = 0
 146              		@ frame_needed = 1, uses_anonymous_args = 0
 147 0000 80B5     		push	{r7, lr}
 148              	.LCFI8:
 149              		.cfi_def_cfa_offset 8
 150              		.cfi_offset 7, -8
 151              		.cfi_offset 14, -4
 152 0002 00AF     		add	r7, sp, #0
 153              	.LCFI9:
 154              		.cfi_def_cfa_register 7
 128:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 129:Core/Src/stm32l0xx_it.c **** 
 130:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 131:Core/Src/stm32l0xx_it.c ****   HAL_IncTick();
 155              		.loc 1 131 3
 156 0004 FFF7FEFF 		bl	HAL_IncTick
 132:Core/Src/stm32l0xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 133:Core/Src/stm32l0xx_it.c **** 
 134:Core/Src/stm32l0xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 135:Core/Src/stm32l0xx_it.c **** }
 157              		.loc 1 135 1
 158 0008 C046     		nop
 159 000a BD46     		mov	sp, r7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 6


 160              		@ sp needed
 161 000c 80BD     		pop	{r7, pc}
 162              		.cfi_endproc
 163              	.LFE51:
 165              		.text
 166              	.Letext0:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s 			page 7


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_it.c
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:16     .text.NMI_Handler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:24     .text.NMI_Handler:0000000000000000 NMI_Handler
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:46     .text.HardFault_Handler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:53     .text.HardFault_Handler:0000000000000000 HardFault_Handler
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:74     .text.SVC_Handler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:81     .text.SVC_Handler:0000000000000000 SVC_Handler
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:104    .text.PendSV_Handler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:111    .text.PendSV_Handler:0000000000000000 PendSV_Handler
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:134    .text.SysTick_Handler:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//ccaiEV2c.s:141    .text.SysTick_Handler:0000000000000000 SysTick_Handler

UNDEFINED SYMBOLS
HAL_IncTick
