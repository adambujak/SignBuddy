ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 1


   1              		.cpu cortex-m0plus
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 0
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32l0xx_hal.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	uwTick
  16              		.section	.bss.uwTick,"aw",%nobits
  17              		.align	2
  20              	uwTick:
  21 0000 00000000 		.space	4
  22              		.global	uwTickPrio
  23              		.section	.data.uwTickPrio,"aw"
  24              		.align	2
  27              	uwTickPrio:
  28 0000 04000000 		.word	4
  29              		.global	uwTickFreq
  30              		.section	.data.uwTickFreq,"aw"
  33              	uwTickFreq:
  34 0000 01       		.byte	1
  35              		.section	.text.HAL_Init,"ax",%progbits
  36              		.align	1
  37              		.global	HAL_Init
  38              		.arch armv6s-m
  39              		.syntax unified
  40              		.code	16
  41              		.thumb_func
  42              		.fpu softvfp
  44              	HAL_Init:
  45              	.LFB47:
  46              		.file 1 "Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c"
   1:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
   2:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
   3:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @file    stm32l0xx_hal.c
   4:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @author  MCD Application Team
   5:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief   HAL module driver.
   6:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *          This is the common part of the HAL initialization
   7:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
   8:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @verbatim
   9:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  10:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                      ##### How to use this driver #####
  11:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ==============================================================================
  12:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  13:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The common HAL driver contains a set of generic and common APIs that can be
  14:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     used by the PPP peripheral drivers and the user to start using the HAL.
  15:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]
  16:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     The HAL contains two APIs categories:
  17:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Common HAL APIs
  18:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****          (+) Services HAL APIs
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 2


  19:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  20:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   @endverbatim
  21:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  22:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @attention
  23:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  24:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * <h2><center>&copy; Copyright (c) 2016 STMicroelectronics.
  25:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * All rights reserved.</center></h2>
  26:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  27:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  28:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * the "License"; You may not use this file except in compliance with the
  29:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * License. You may obtain a copy of the License at:
  30:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *                        opensource.org/licenses/BSD-3-Clause
  31:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *
  32:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   ******************************************************************************
  33:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  34:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  35:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Includes ------------------------------------------------------------------*/
  36:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #include "stm32l0xx_hal.h"
  37:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  38:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup STM32L0xx_HAL_Driver
  39:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  40:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  41:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  42:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #ifdef HAL_MODULE_ENABLED
  43:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  44:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL
  45:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief HAL module driver.
  46:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  47:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  48:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  49:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Constants
  50:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  51:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  52:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  53:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @defgroup HAL_Version HAL Version
  54:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  55:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  56:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  57:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  58:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @brief STM32L0xx HAL Driver version number
  59:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  */
  60:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_MAIN   (0x01U) /*!< [31:24] main version */
  61:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB1   (0x0AU) /*!< [23:16] sub1 version */
  62:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_SUB2   (0x05U) /*!< [15:8]  sub2 version */
  63:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION_RC     (0x00U) /*!< [7:0]  release candidate */
  64:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define __STM32L0xx_HAL_VERSION         ((__STM32L0xx_HAL_VERSION_MAIN << 24U)\
  65:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB1 << 16U)\
  66:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_SUB2 << 8U )\
  67:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                                         |(__STM32L0xx_HAL_VERSION_RC))
  68:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  69:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #define IDCODE_DEVID_MASK    (0x00000FFFU)
  70:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  71:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  72:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  73:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  74:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  75:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 3


  76:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  77:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  78:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  79:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported variables --------------------------------------------------------*/
  80:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Variables
  81:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  82:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  83:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __IO uint32_t uwTick;
  84:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t uwTickPrio   = (1UL << __NVIC_PRIO_BITS); /* Invalid PRIO */
  85:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_TickFreqTypeDef uwTickFreq = HAL_TICK_FREQ_DEFAULT;  /* 1KHz */
  86:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
  87:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
  88:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  89:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  90:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /* Exported functions --------------------------------------------------------*/
  91:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions
  92:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
  93:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
  94:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
  95:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group1
  96:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    Initialization and de-initialization functions
  97:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
  98:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
  99:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 100:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****               ##### Initialization and de-initialization functions #####
 101:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 102:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    [..]  This section provides functions allowing to:
 103:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Initialize the Flash interface, the NVIC allocation and initial clock
 104:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           configuration. It initializes the source of time base also when timeout
 105:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           is needed and the backup domain when enabled.
 106:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) De-initialize common part of the HAL.
 107:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Configure the time base source to have 1ms time base with a dedicated
 108:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****           Tick interrupt priority.
 109:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) SysTick timer is used by default as source of time base, but user
 110:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              can eventually implement his proper time base source (a general purpose
 111:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              timer for example or other time source), keeping in mind that Time base
 112:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              duration should be kept 1ms since PPP_TIMEOUT_VALUEs are defined and
 113:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              handled in milliseconds basis.
 114:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Time base configuration function (HAL_InitTick ()) is called automatically
 115:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              at the beginning of the program after reset by HAL_Init() or at any time
 116:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              when clock is configured, by HAL_RCC_ClockConfig().
 117:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****         (++) Source of time base is configured  to generate interrupts at regular
 118:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              time intervals. Care must be taken if HAL_Delay() is called from a
 119:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              peripheral ISR process, the Tick interrupt line must have higher priority
 120:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             (numerically lower) than the peripheral interrupt. Otherwise the caller
 121:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             ISR process will be blocked.
 122:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****        (++) functions affecting time base configurations are declared as __weak
 123:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****              to make  override possible  in case of other  implementations in user file.
 124:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 125:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 126:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 127:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 128:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 129:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 130:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the Flash prefetch, Flash preread and Buffer cache,
 131:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Configures time base source, NVIC and Low level hardware
 132:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called at the beginning of program after reset and before
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 4


 133:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       the clock configuration
 134:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note The time base configuration is based on MSI clock when exiting from Reset.
 135:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Once done, time base tick start incrementing.
 136:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        In the default implementation,Systick is used as source of time base.
 137:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        the tick variable is incremented each 1ms in its ISR.
 138:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 139:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 140:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_Init(void)
 141:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
  47              		.loc 1 141 1
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 8
  50              		@ frame_needed = 1, uses_anonymous_args = 0
  51 0000 80B5     		push	{r7, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 8
  54              		.cfi_offset 7, -8
  55              		.cfi_offset 14, -4
  56 0002 82B0     		sub	sp, sp, #8
  57              	.LCFI1:
  58              		.cfi_def_cfa_offset 16
  59 0004 00AF     		add	r7, sp, #0
  60              	.LCFI2:
  61              		.cfi_def_cfa_register 7
 142:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef  status = HAL_OK;
  62              		.loc 1 142 22
  63 0006 FB1D     		adds	r3, r7, #7
  64 0008 0022     		movs	r2, #0
  65 000a 1A70     		strb	r2, [r3]
 143:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 144:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure Buffer cache, Flash prefetch,  Flash preread */
 145:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (BUFFER_CACHE_DISABLE != 0)
 146:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_BUFFER_CACHE_DISABLE();
 147:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* BUFFER_CACHE_DISABLE */
 148:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 149:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREREAD_ENABLE != 0)
 150:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREREAD_BUFFER_ENABLE();
  66              		.loc 1 150 3
  67 000c 0B4B     		ldr	r3, .L5
  68 000e 1A68     		ldr	r2, [r3]
  69 0010 0A4B     		ldr	r3, .L5
  70 0012 4021     		movs	r1, #64
  71 0014 0A43     		orrs	r2, r1
  72 0016 1A60     		str	r2, [r3]
 151:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREREAD_ENABLE */
 152:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 153:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #if (PREFETCH_ENABLE != 0)
 154:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 155:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** #endif /* PREFETCH_ENABLE */
 156:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 157:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
 158:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
  73              		.loc 1 158 7
  74 0018 0320     		movs	r0, #3
  75 001a FFF7FEFF 		bl	HAL_InitTick
  76 001e 031E     		subs	r3, r0, #0
  77              		.loc 1 158 6
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 5


  78 0020 03D0     		beq	.L2
 159:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 160:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_ERROR;
  79              		.loc 1 160 12
  80 0022 FB1D     		adds	r3, r7, #7
  81 0024 0122     		movs	r2, #1
  82 0026 1A70     		strb	r2, [r3]
  83 0028 01E0     		b	.L3
  84              	.L2:
 161:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 162:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 163:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 164:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Init the low level hardware */
 165:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_MspInit();
  85              		.loc 1 165 5
  86 002a FFF7FEFF 		bl	HAL_MspInit
  87              	.L3:
 166:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 167:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 168:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 169:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
  88              		.loc 1 169 10
  89 002e FB1D     		adds	r3, r7, #7
  90 0030 1B78     		ldrb	r3, [r3]
 170:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
  91              		.loc 1 170 1
  92 0032 1800     		movs	r0, r3
  93 0034 BD46     		mov	sp, r7
  94 0036 02B0     		add	sp, sp, #8
  95              		@ sp needed
  96 0038 80BD     		pop	{r7, pc}
  97              	.L6:
  98 003a C046     		.align	2
  99              	.L5:
 100 003c 00200240 		.word	1073881088
 101              		.cfi_endproc
 102              	.LFE47:
 104              		.section	.text.HAL_DeInit,"ax",%progbits
 105              		.align	1
 106              		.global	HAL_DeInit
 107              		.syntax unified
 108              		.code	16
 109              		.thumb_func
 110              		.fpu softvfp
 112              	HAL_DeInit:
 113              	.LFB48:
 171:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 172:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 173:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function de-initializes common part of the HAL and stops the source
 174:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        of time base.
 175:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is optional.
 176:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 177:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 178:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_DeInit(void)
 179:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 114              		.loc 1 179 1
 115              		.cfi_startproc
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 6


 116              		@ args = 0, pretend = 0, frame = 0
 117              		@ frame_needed = 1, uses_anonymous_args = 0
 118 0000 80B5     		push	{r7, lr}
 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 8
 121              		.cfi_offset 7, -8
 122              		.cfi_offset 14, -4
 123 0002 00AF     		add	r7, sp, #0
 124              	.LCFI4:
 125              		.cfi_def_cfa_register 7
 180:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Reset of all peripherals */
 181:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_FORCE_RESET();
 126              		.loc 1 181 3
 127 0004 104B     		ldr	r3, .L9
 128 0006 0122     		movs	r2, #1
 129 0008 5242     		rsbs	r2, r2, #0
 130 000a 9A62     		str	r2, [r3, #40]
 182:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB1_RELEASE_RESET();
 131              		.loc 1 182 3
 132 000c 0E4B     		ldr	r3, .L9
 133 000e 0022     		movs	r2, #0
 134 0010 9A62     		str	r2, [r3, #40]
 183:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 184:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_FORCE_RESET();
 135              		.loc 1 184 3
 136 0012 0D4B     		ldr	r3, .L9
 137 0014 0122     		movs	r2, #1
 138 0016 5242     		rsbs	r2, r2, #0
 139 0018 5A62     		str	r2, [r3, #36]
 185:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_APB2_RELEASE_RESET();
 140              		.loc 1 185 3
 141 001a 0B4B     		ldr	r3, .L9
 142 001c 0022     		movs	r2, #0
 143 001e 5A62     		str	r2, [r3, #36]
 186:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 187:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_FORCE_RESET();
 144              		.loc 1 187 3
 145 0020 094B     		ldr	r3, .L9
 146 0022 0122     		movs	r2, #1
 147 0024 5242     		rsbs	r2, r2, #0
 148 0026 1A62     		str	r2, [r3, #32]
 188:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_AHB_RELEASE_RESET();
 149              		.loc 1 188 3
 150 0028 074B     		ldr	r3, .L9
 151 002a 0022     		movs	r2, #0
 152 002c 1A62     		str	r2, [r3, #32]
 189:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 190:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_FORCE_RESET();
 153              		.loc 1 190 3
 154 002e 064B     		ldr	r3, .L9
 155 0030 0122     		movs	r2, #1
 156 0032 5242     		rsbs	r2, r2, #0
 157 0034 DA61     		str	r2, [r3, #28]
 191:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   __HAL_RCC_IOP_RELEASE_RESET();
 158              		.loc 1 191 3
 159 0036 044B     		ldr	r3, .L9
 160 0038 0022     		movs	r2, #0
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 7


 161 003a DA61     		str	r2, [r3, #28]
 192:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 193:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* De-Init the low level hardware */
 194:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_MspDeInit();
 162              		.loc 1 194 3
 163 003c FFF7FEFF 		bl	HAL_MspDeInit
 195:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 196:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 197:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 164              		.loc 1 197 10
 165 0040 0023     		movs	r3, #0
 198:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 166              		.loc 1 198 1
 167 0042 1800     		movs	r0, r3
 168 0044 BD46     		mov	sp, r7
 169              		@ sp needed
 170 0046 80BD     		pop	{r7, pc}
 171              	.L10:
 172              		.align	2
 173              	.L9:
 174 0048 00100240 		.word	1073876992
 175              		.cfi_endproc
 176              	.LFE48:
 178              		.section	.text.HAL_MspInit,"ax",%progbits
 179              		.align	1
 180              		.weak	HAL_MspInit
 181              		.syntax unified
 182              		.code	16
 183              		.thumb_func
 184              		.fpu softvfp
 186              	HAL_MspInit:
 187              	.LFB49:
 199:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 200:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 201:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Initializes the MSP.
 202:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 203:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 204:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspInit(void)
 205:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 188              		.loc 1 205 1
 189              		.cfi_startproc
 190              		@ args = 0, pretend = 0, frame = 0
 191              		@ frame_needed = 1, uses_anonymous_args = 0
 192 0000 80B5     		push	{r7, lr}
 193              	.LCFI5:
 194              		.cfi_def_cfa_offset 8
 195              		.cfi_offset 7, -8
 196              		.cfi_offset 14, -4
 197 0002 00AF     		add	r7, sp, #0
 198              	.LCFI6:
 199              		.cfi_def_cfa_register 7
 206:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 207:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspInit could be implemented in the user file
 208:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 209:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 200              		.loc 1 209 1
 201 0004 C046     		nop
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 8


 202 0006 BD46     		mov	sp, r7
 203              		@ sp needed
 204 0008 80BD     		pop	{r7, pc}
 205              		.cfi_endproc
 206              	.LFE49:
 208              		.section	.text.HAL_MspDeInit,"ax",%progbits
 209              		.align	1
 210              		.weak	HAL_MspDeInit
 211              		.syntax unified
 212              		.code	16
 213              		.thumb_func
 214              		.fpu softvfp
 216              	HAL_MspDeInit:
 217              	.LFB50:
 210:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 211:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 212:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  DeInitializes the MSP.
 213:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 214:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 215:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_MspDeInit(void)
 216:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 218              		.loc 1 216 1
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222 0000 80B5     		push	{r7, lr}
 223              	.LCFI7:
 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 7, -8
 226              		.cfi_offset 14, -4
 227 0002 00AF     		add	r7, sp, #0
 228              	.LCFI8:
 229              		.cfi_def_cfa_register 7
 217:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* NOTE : This function should not be modified, when the callback is needed,
 218:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****             the HAL_MspDeInit could be implemented in the user file
 219:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    */
 220:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 230              		.loc 1 220 1
 231 0004 C046     		nop
 232 0006 BD46     		mov	sp, r7
 233              		@ sp needed
 234 0008 80BD     		pop	{r7, pc}
 235              		.cfi_endproc
 236              	.LFE50:
 238              		.global	__aeabi_uidiv
 239              		.section	.text.HAL_InitTick,"ax",%progbits
 240              		.align	1
 241              		.weak	HAL_InitTick
 242              		.syntax unified
 243              		.code	16
 244              		.thumb_func
 245              		.fpu softvfp
 247              	HAL_InitTick:
 248              	.LFB51:
 221:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 222:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 223:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function configures the source of the time base:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 9


 224:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The time source is configured  to have 1ms time base with a dedicated 
 225:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        Tick interrupt priority.
 226:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is called  automatically at the beginning of program after
 227:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       reset by HAL_Init() or at any time when clock is reconfigured  by HAL_RCC_ClockConfig().
 228:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, SysTick timer is the source of time base. 
 229:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals. 
 230:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       Care must be taken if HAL_Delay() is called from a peripheral ISR process, 
 231:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The SysTick interrupt must have higher priority (numerically lower)
 232:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       than the peripheral interrupt. Otherwise the caller ISR process will be blocked.
 233:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       The function is declared as __weak  to be overwritten  in case of other
 234:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementation  in user file.
 235:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param TickPriority Tick interrupt priority.
 236:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval HAL status
 237:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 238:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
 239:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 249              		.loc 1 239 1
 250              		.cfi_startproc
 251              		@ args = 0, pretend = 0, frame = 8
 252              		@ frame_needed = 1, uses_anonymous_args = 0
 253 0000 90B5     		push	{r4, r7, lr}
 254              	.LCFI9:
 255              		.cfi_def_cfa_offset 12
 256              		.cfi_offset 4, -12
 257              		.cfi_offset 7, -8
 258              		.cfi_offset 14, -4
 259 0002 83B0     		sub	sp, sp, #12
 260              	.LCFI10:
 261              		.cfi_def_cfa_offset 24
 262 0004 00AF     		add	r7, sp, #0
 263              	.LCFI11:
 264              		.cfi_def_cfa_register 7
 265 0006 7860     		str	r0, [r7, #4]
 240:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure the SysTick to have interrupt in 1ms time basis*/
 241:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 266              		.loc 1 241 7
 267 0008 144B     		ldr	r3, .L18
 268 000a 1C68     		ldr	r4, [r3]
 269              		.loc 1 241 51
 270 000c 144B     		ldr	r3, .L18+4
 271 000e 1B78     		ldrb	r3, [r3]
 272 0010 1900     		movs	r1, r3
 273 0012 FA23     		movs	r3, #250
 274 0014 9800     		lsls	r0, r3, #2
 275 0016 FFF7FEFF 		bl	__aeabi_uidiv
 276 001a 0300     		movs	r3, r0
 277              		.loc 1 241 7
 278 001c 1900     		movs	r1, r3
 279 001e 2000     		movs	r0, r4
 280 0020 FFF7FEFF 		bl	__aeabi_uidiv
 281 0024 0300     		movs	r3, r0
 282 0026 1800     		movs	r0, r3
 283 0028 FFF7FEFF 		bl	HAL_SYSTICK_Config
 284 002c 031E     		subs	r3, r0, #0
 285              		.loc 1 241 6
 286 002e 01D0     		beq	.L14
 242:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 10


 243:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     return HAL_ERROR;
 287              		.loc 1 243 12
 288 0030 0123     		movs	r3, #1
 289 0032 0FE0     		b	.L15
 290              	.L14:
 244:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 245:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 246:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Configure the SysTick IRQ priority */
 247:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 291              		.loc 1 247 6
 292 0034 7B68     		ldr	r3, [r7, #4]
 293 0036 032B     		cmp	r3, #3
 294 0038 0BD8     		bhi	.L16
 248:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 249:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 295              		.loc 1 249 5
 296 003a 7968     		ldr	r1, [r7, #4]
 297 003c 0123     		movs	r3, #1
 298 003e 5B42     		rsbs	r3, r3, #0
 299 0040 0022     		movs	r2, #0
 300 0042 1800     		movs	r0, r3
 301 0044 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 250:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     uwTickPrio = TickPriority;
 302              		.loc 1 250 16
 303 0048 064B     		ldr	r3, .L18+8
 304 004a 7A68     		ldr	r2, [r7, #4]
 305 004c 1A60     		str	r2, [r3]
 251:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 252:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   else
 253:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     return HAL_ERROR;
 255:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 256:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 257:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Return function status */
 258:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return HAL_OK;
 306              		.loc 1 258 10
 307 004e 0023     		movs	r3, #0
 308 0050 00E0     		b	.L15
 309              	.L16:
 254:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 310              		.loc 1 254 12
 311 0052 0123     		movs	r3, #1
 312              	.L15:
 259:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 313              		.loc 1 259 1
 314 0054 1800     		movs	r0, r3
 315 0056 BD46     		mov	sp, r7
 316 0058 03B0     		add	sp, sp, #12
 317              		@ sp needed
 318 005a 90BD     		pop	{r4, r7, pc}
 319              	.L19:
 320              		.align	2
 321              	.L18:
 322 005c 00000000 		.word	SystemCoreClock
 323 0060 00000000 		.word	uwTickFreq
 324 0064 00000000 		.word	uwTickPrio
 325              		.cfi_endproc
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 11


 326              	.LFE51:
 328              		.section	.text.HAL_IncTick,"ax",%progbits
 329              		.align	1
 330              		.weak	HAL_IncTick
 331              		.syntax unified
 332              		.code	16
 333              		.thumb_func
 334              		.fpu softvfp
 336              	HAL_IncTick:
 337              	.LFB52:
 260:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 261:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 262:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 263:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 264:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 265:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 266:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Control functions
 267:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 268:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 269:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 270:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Control functions #####
 271:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 272:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 273:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a tick value in millisecond
 274:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Provide a blocking delay in millisecond
 275:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Suspend the time base source interrupt
 276:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Resume the time base source interrupt
 277:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the HAL API driver version
 278:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device identifier
 279:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Get the device revision identifier
 280:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 281:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 282:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 283:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 284:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 285:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 286:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function is called to increment a global variable "uwTick"
 287:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        used as application time base.
 288:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation, this variable is incremented each 1ms
 289:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       in SysTick ISR.
 290:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  * @note This function is declared as __weak to be overwritten in case of other
 291:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *      implementations in user file.
 292:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 293:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 294:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_IncTick(void)
 295:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 338              		.loc 1 295 1
 339              		.cfi_startproc
 340              		@ args = 0, pretend = 0, frame = 0
 341              		@ frame_needed = 1, uses_anonymous_args = 0
 342 0000 80B5     		push	{r7, lr}
 343              	.LCFI12:
 344              		.cfi_def_cfa_offset 8
 345              		.cfi_offset 7, -8
 346              		.cfi_offset 14, -4
 347 0002 00AF     		add	r7, sp, #0
 348              	.LCFI13:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 12


 349              		.cfi_def_cfa_register 7
 296:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uwTick += uwTickFreq;
 350              		.loc 1 296 10
 351 0004 054B     		ldr	r3, .L21
 352 0006 1B78     		ldrb	r3, [r3]
 353 0008 1A00     		movs	r2, r3
 354 000a 054B     		ldr	r3, .L21+4
 355 000c 1B68     		ldr	r3, [r3]
 356 000e D218     		adds	r2, r2, r3
 357 0010 034B     		ldr	r3, .L21+4
 358 0012 1A60     		str	r2, [r3]
 297:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 359              		.loc 1 297 1
 360 0014 C046     		nop
 361 0016 BD46     		mov	sp, r7
 362              		@ sp needed
 363 0018 80BD     		pop	{r7, pc}
 364              	.L22:
 365 001a C046     		.align	2
 366              	.L21:
 367 001c 00000000 		.word	uwTickFreq
 368 0020 00000000 		.word	uwTick
 369              		.cfi_endproc
 370              	.LFE52:
 372              		.section	.text.HAL_GetTick,"ax",%progbits
 373              		.align	1
 374              		.weak	HAL_GetTick
 375              		.syntax unified
 376              		.code	16
 377              		.thumb_func
 378              		.fpu softvfp
 380              	HAL_GetTick:
 381              	.LFB53:
 298:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 299:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 300:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Provides a tick value in millisecond.
 301:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 302:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 303:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick value
 304:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 305:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak uint32_t HAL_GetTick(void)
 306:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 382              		.loc 1 306 1
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 1, uses_anonymous_args = 0
 386 0000 80B5     		push	{r7, lr}
 387              	.LCFI14:
 388              		.cfi_def_cfa_offset 8
 389              		.cfi_offset 7, -8
 390              		.cfi_offset 14, -4
 391 0002 00AF     		add	r7, sp, #0
 392              	.LCFI15:
 393              		.cfi_def_cfa_register 7
 307:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTick;
 394              		.loc 1 307 10
 395 0004 024B     		ldr	r3, .L25
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 13


 396 0006 1B68     		ldr	r3, [r3]
 308:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 397              		.loc 1 308 1
 398 0008 1800     		movs	r0, r3
 399 000a BD46     		mov	sp, r7
 400              		@ sp needed
 401 000c 80BD     		pop	{r7, pc}
 402              	.L26:
 403 000e C046     		.align	2
 404              	.L25:
 405 0010 00000000 		.word	uwTick
 406              		.cfi_endproc
 407              	.LFE53:
 409              		.section	.text.HAL_GetTickPrio,"ax",%progbits
 410              		.align	1
 411              		.global	HAL_GetTickPrio
 412              		.syntax unified
 413              		.code	16
 414              		.thumb_func
 415              		.fpu softvfp
 417              	HAL_GetTickPrio:
 418              	.LFB54:
 309:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 310:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 311:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function returns a tick priority.
 312:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick priority
 313:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 314:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetTickPrio(void)
 315:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 419              		.loc 1 315 1
 420              		.cfi_startproc
 421              		@ args = 0, pretend = 0, frame = 0
 422              		@ frame_needed = 1, uses_anonymous_args = 0
 423 0000 80B5     		push	{r7, lr}
 424              	.LCFI16:
 425              		.cfi_def_cfa_offset 8
 426              		.cfi_offset 7, -8
 427              		.cfi_offset 14, -4
 428 0002 00AF     		add	r7, sp, #0
 429              	.LCFI17:
 430              		.cfi_def_cfa_register 7
 316:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTickPrio;
 431              		.loc 1 316 10
 432 0004 024B     		ldr	r3, .L29
 433 0006 1B68     		ldr	r3, [r3]
 317:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 434              		.loc 1 317 1
 435 0008 1800     		movs	r0, r3
 436 000a BD46     		mov	sp, r7
 437              		@ sp needed
 438 000c 80BD     		pop	{r7, pc}
 439              	.L30:
 440 000e C046     		.align	2
 441              	.L29:
 442 0010 00000000 		.word	uwTickPrio
 443              		.cfi_endproc
 444              	.LFE54:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 14


 446              		.section	.text.HAL_SetTickFreq,"ax",%progbits
 447              		.align	1
 448              		.global	HAL_SetTickFreq
 449              		.syntax unified
 450              		.code	16
 451              		.thumb_func
 452              		.fpu softvfp
 454              	HAL_SetTickFreq:
 455              	.LFB55:
 318:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 319:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 320:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Set new tick Freq.
 321:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Status
 322:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 323:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_StatusTypeDef HAL_SetTickFreq(HAL_TickFreqTypeDef Freq)
 324:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 456              		.loc 1 324 1
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 16
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 461              	.LCFI18:
 462              		.cfi_def_cfa_offset 20
 463              		.cfi_offset 4, -20
 464              		.cfi_offset 5, -16
 465              		.cfi_offset 6, -12
 466              		.cfi_offset 7, -8
 467              		.cfi_offset 14, -4
 468 0002 85B0     		sub	sp, sp, #20
 469              	.LCFI19:
 470              		.cfi_def_cfa_offset 40
 471 0004 00AF     		add	r7, sp, #0
 472              	.LCFI20:
 473              		.cfi_def_cfa_register 7
 474 0006 0200     		movs	r2, r0
 475 0008 FB1D     		adds	r3, r7, #7
 476 000a 1A70     		strb	r2, [r3]
 325:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_StatusTypeDef status  = HAL_OK;
 477              		.loc 1 325 21
 478 000c 0F21     		movs	r1, #15
 479 000e 7B18     		adds	r3, r7, r1
 480 0010 0022     		movs	r2, #0
 481 0012 1A70     		strb	r2, [r3]
 326:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   HAL_TickFreqTypeDef prevTickFreq;
 327:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 328:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_TICKFREQ(Freq));
 329:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 330:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (uwTickFreq != Freq)
 482              		.loc 1 330 18
 483 0014 134B     		ldr	r3, .L34
 484 0016 1B78     		ldrb	r3, [r3]
 485              		.loc 1 330 6
 486 0018 FA1D     		adds	r2, r7, #7
 487 001a 1278     		ldrb	r2, [r2]
 488 001c 9A42     		cmp	r2, r3
 489 001e 19D0     		beq	.L32
 331:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 15


 332:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Back up uwTickFreq frequency */
 333:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     prevTickFreq = uwTickFreq;
 490              		.loc 1 333 18
 491 0020 0E26     		movs	r6, #14
 492 0022 BB19     		adds	r3, r7, r6
 493 0024 0F4A     		ldr	r2, .L34
 494 0026 1278     		ldrb	r2, [r2]
 495 0028 1A70     		strb	r2, [r3]
 334:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 335:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Update uwTickFreq global variable used by HAL_InitTick() */
 336:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     uwTickFreq = Freq;
 496              		.loc 1 336 16
 497 002a 0E4B     		ldr	r3, .L34
 498 002c FA1D     		adds	r2, r7, #7
 499 002e 1278     		ldrb	r2, [r2]
 500 0030 1A70     		strb	r2, [r3]
 337:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 338:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Apply the new tick Freq  */
 339:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     status = HAL_InitTick(uwTickPrio);
 501              		.loc 1 339 14
 502 0032 0D4B     		ldr	r3, .L34+4
 503 0034 1B68     		ldr	r3, [r3]
 504 0036 0D00     		movs	r5, r1
 505 0038 7C18     		adds	r4, r7, r1
 506 003a 1800     		movs	r0, r3
 507 003c FFF7FEFF 		bl	HAL_InitTick
 508 0040 0300     		movs	r3, r0
 509 0042 2370     		strb	r3, [r4]
 340:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 341:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     if (status != HAL_OK)
 510              		.loc 1 341 8
 511 0044 7B19     		adds	r3, r7, r5
 512 0046 1B78     		ldrb	r3, [r3]
 513 0048 002B     		cmp	r3, #0
 514 004a 03D0     		beq	.L32
 342:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     {
 343:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       /* Restore previous tick frequency */
 344:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       uwTickFreq = prevTickFreq;
 515              		.loc 1 344 18
 516 004c 054B     		ldr	r3, .L34
 517 004e BA19     		adds	r2, r7, r6
 518 0050 1278     		ldrb	r2, [r2]
 519 0052 1A70     		strb	r2, [r3]
 520              	.L32:
 345:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     }
 346:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 347:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 348:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return status;
 521              		.loc 1 348 10
 522 0054 0F23     		movs	r3, #15
 523 0056 FB18     		adds	r3, r7, r3
 524 0058 1B78     		ldrb	r3, [r3]
 349:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 525              		.loc 1 349 1
 526 005a 1800     		movs	r0, r3
 527 005c BD46     		mov	sp, r7
 528 005e 05B0     		add	sp, sp, #20
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 16


 529              		@ sp needed
 530 0060 F0BD     		pop	{r4, r5, r6, r7, pc}
 531              	.L35:
 532 0062 C046     		.align	2
 533              	.L34:
 534 0064 00000000 		.word	uwTickFreq
 535 0068 00000000 		.word	uwTickPrio
 536              		.cfi_endproc
 537              	.LFE55:
 539              		.section	.text.HAL_GetTickFreq,"ax",%progbits
 540              		.align	1
 541              		.global	HAL_GetTickFreq
 542              		.syntax unified
 543              		.code	16
 544              		.thumb_func
 545              		.fpu softvfp
 547              	HAL_GetTickFreq:
 548              	.LFB56:
 350:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 351:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 352:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Return tick frequency.
 353:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval tick period in Hz
 354:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 355:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** HAL_TickFreqTypeDef HAL_GetTickFreq(void)
 356:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 549              		.loc 1 356 1
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 1, uses_anonymous_args = 0
 553 0000 80B5     		push	{r7, lr}
 554              	.LCFI21:
 555              		.cfi_def_cfa_offset 8
 556              		.cfi_offset 7, -8
 557              		.cfi_offset 14, -4
 558 0002 00AF     		add	r7, sp, #0
 559              	.LCFI22:
 560              		.cfi_def_cfa_register 7
 357:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return uwTickFreq;
 561              		.loc 1 357 10
 562 0004 024B     		ldr	r3, .L38
 563 0006 1B78     		ldrb	r3, [r3]
 358:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 564              		.loc 1 358 1
 565 0008 1800     		movs	r0, r3
 566 000a BD46     		mov	sp, r7
 567              		@ sp needed
 568 000c 80BD     		pop	{r7, pc}
 569              	.L39:
 570 000e C046     		.align	2
 571              	.L38:
 572 0010 00000000 		.word	uwTickFreq
 573              		.cfi_endproc
 574              	.LFE56:
 576              		.section	.text.HAL_Delay,"ax",%progbits
 577              		.align	1
 578              		.weak	HAL_Delay
 579              		.syntax unified
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 17


 580              		.code	16
 581              		.thumb_func
 582              		.fpu softvfp
 584              	HAL_Delay:
 585              	.LFB57:
 359:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 360:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 361:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief This function provides minimum delay (in milliseconds) based
 362:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        on variable incremented.
 363:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base.
 364:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       It is used to generate interrupts at regular time intervals where uwTick
 365:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is incremented.
 366:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 367:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 368:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Delay specifies the delay time length, in milliseconds.
 369:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 370:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 371:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_Delay(uint32_t Delay)
 372:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 586              		.loc 1 372 1
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 16
 589              		@ frame_needed = 1, uses_anonymous_args = 0
 590 0000 80B5     		push	{r7, lr}
 591              	.LCFI23:
 592              		.cfi_def_cfa_offset 8
 593              		.cfi_offset 7, -8
 594              		.cfi_offset 14, -4
 595 0002 84B0     		sub	sp, sp, #16
 596              	.LCFI24:
 597              		.cfi_def_cfa_offset 24
 598 0004 00AF     		add	r7, sp, #0
 599              	.LCFI25:
 600              		.cfi_def_cfa_register 7
 601 0006 7860     		str	r0, [r7, #4]
 373:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t tickstart = HAL_GetTick();
 602              		.loc 1 373 24
 603 0008 FFF7FEFF 		bl	HAL_GetTick
 604 000c 0300     		movs	r3, r0
 605 000e BB60     		str	r3, [r7, #8]
 374:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   uint32_t wait = Delay;
 606              		.loc 1 374 12
 607 0010 7B68     		ldr	r3, [r7, #4]
 608 0012 FB60     		str	r3, [r7, #12]
 375:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 376:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Add a freq to guarantee minimum wait */
 377:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   if (wait < HAL_MAX_DELAY)
 609              		.loc 1 377 6
 610 0014 FB68     		ldr	r3, [r7, #12]
 611 0016 0133     		adds	r3, r3, #1
 612 0018 05D0     		beq	.L43
 378:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 379:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     wait += (uint32_t)(uwTickFreq);
 613              		.loc 1 379 13
 614 001a 0A4B     		ldr	r3, .L44
 615 001c 1B78     		ldrb	r3, [r3]
 616 001e 1A00     		movs	r2, r3
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 18


 617              		.loc 1 379 10
 618 0020 FB68     		ldr	r3, [r7, #12]
 619 0022 9B18     		adds	r3, r3, r2
 620 0024 FB60     		str	r3, [r7, #12]
 621              	.L43:
 380:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 381:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 382:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   while((HAL_GetTick() - tickstart) < wait)
 622              		.loc 1 382 8
 623 0026 C046     		nop
 624              	.L42:
 625              		.loc 1 382 10 discriminator 1
 626 0028 FFF7FEFF 		bl	HAL_GetTick
 627 002c 0200     		movs	r2, r0
 628              		.loc 1 382 24 discriminator 1
 629 002e BB68     		ldr	r3, [r7, #8]
 630 0030 D31A     		subs	r3, r2, r3
 631              		.loc 1 382 8 discriminator 1
 632 0032 FA68     		ldr	r2, [r7, #12]
 633 0034 9A42     		cmp	r2, r3
 634 0036 F7D8     		bhi	.L42
 383:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 384:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 385:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 635              		.loc 1 385 1
 636 0038 C046     		nop
 637 003a C046     		nop
 638 003c BD46     		mov	sp, r7
 639 003e 04B0     		add	sp, sp, #16
 640              		@ sp needed
 641 0040 80BD     		pop	{r7, pc}
 642              	.L45:
 643 0042 C046     		.align	2
 644              	.L44:
 645 0044 00000000 		.word	uwTickFreq
 646              		.cfi_endproc
 647              	.LFE57:
 649              		.section	.text.HAL_SuspendTick,"ax",%progbits
 650              		.align	1
 651              		.weak	HAL_SuspendTick
 652              		.syntax unified
 653              		.code	16
 654              		.thumb_func
 655              		.fpu softvfp
 657              	HAL_SuspendTick:
 658              	.LFB58:
 386:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 387:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 388:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Suspends the Tick increment.
 389:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 390:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_SuspendTick()
 391:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be disabled and so Tick increment
 392:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is suspended.
 393:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 394:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 395:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 396:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 19


 397:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_SuspendTick(void)
 398:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 659              		.loc 1 398 1
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663 0000 80B5     		push	{r7, lr}
 664              	.LCFI26:
 665              		.cfi_def_cfa_offset 8
 666              		.cfi_offset 7, -8
 667              		.cfi_offset 14, -4
 668 0002 00AF     		add	r7, sp, #0
 669              	.LCFI27:
 670              		.cfi_def_cfa_register 7
 399:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Disable SysTick Interrupt */
 400:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL &= ~SysTick_CTRL_TICKINT_Msk;
 671              		.loc 1 400 17
 672 0004 044B     		ldr	r3, .L47
 673 0006 1A68     		ldr	r2, [r3]
 674 0008 034B     		ldr	r3, .L47
 675 000a 0221     		movs	r1, #2
 676 000c 8A43     		bics	r2, r1
 677 000e 1A60     		str	r2, [r3]
 401:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 678              		.loc 1 401 1
 679 0010 C046     		nop
 680 0012 BD46     		mov	sp, r7
 681              		@ sp needed
 682 0014 80BD     		pop	{r7, pc}
 683              	.L48:
 684 0016 C046     		.align	2
 685              	.L47:
 686 0018 10E000E0 		.word	-536813552
 687              		.cfi_endproc
 688              	.LFE58:
 690              		.section	.text.HAL_ResumeTick,"ax",%progbits
 691              		.align	1
 692              		.weak	HAL_ResumeTick
 693              		.syntax unified
 694              		.code	16
 695              		.thumb_func
 696              		.fpu softvfp
 698              	HAL_ResumeTick:
 699              	.LFB59:
 402:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 403:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 404:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Resumes the Tick increment.
 405:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note In the default implementation , SysTick timer is the source of time base. It is
 406:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       used to generate interrupts at regular time intervals. Once HAL_ResumeTick()
 407:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is called, the SysTick interrupt will be enabled and so Tick increment
 408:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       is resumed.
 409:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @note This function is declared as __weak to be overwritten in case of other
 410:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *       implementations in user file.
 411:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 412:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 413:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** __weak void HAL_ResumeTick(void)
 414:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 20


 700              		.loc 1 414 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704 0000 80B5     		push	{r7, lr}
 705              	.LCFI28:
 706              		.cfi_def_cfa_offset 8
 707              		.cfi_offset 7, -8
 708              		.cfi_offset 14, -4
 709 0002 00AF     		add	r7, sp, #0
 710              	.LCFI29:
 711              		.cfi_def_cfa_register 7
 415:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Enable SysTick Interrupt */
 416:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SysTick->CTRL  |= SysTick_CTRL_TICKINT_Msk;
 712              		.loc 1 416 18
 713 0004 044B     		ldr	r3, .L50
 714 0006 1A68     		ldr	r2, [r3]
 715 0008 034B     		ldr	r3, .L50
 716 000a 0221     		movs	r1, #2
 717 000c 0A43     		orrs	r2, r1
 718 000e 1A60     		str	r2, [r3]
 417:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 719              		.loc 1 417 1
 720 0010 C046     		nop
 721 0012 BD46     		mov	sp, r7
 722              		@ sp needed
 723 0014 80BD     		pop	{r7, pc}
 724              	.L51:
 725 0016 C046     		.align	2
 726              	.L50:
 727 0018 10E000E0 		.word	-536813552
 728              		.cfi_endproc
 729              	.LFE59:
 731              		.section	.text.HAL_GetHalVersion,"ax",%progbits
 732              		.align	1
 733              		.global	HAL_GetHalVersion
 734              		.syntax unified
 735              		.code	16
 736              		.thumb_func
 737              		.fpu softvfp
 739              	HAL_GetHalVersion:
 740              	.LFB60:
 418:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 419:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 420:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the HAL revision
 421:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval version: 0xXYZR (8bits for each decimal, R for RC)
 422:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 423:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetHalVersion(void)
 424:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 741              		.loc 1 424 1
 742              		.cfi_startproc
 743              		@ args = 0, pretend = 0, frame = 0
 744              		@ frame_needed = 1, uses_anonymous_args = 0
 745 0000 80B5     		push	{r7, lr}
 746              	.LCFI30:
 747              		.cfi_def_cfa_offset 8
 748              		.cfi_offset 7, -8
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 21


 749              		.cfi_offset 14, -4
 750 0002 00AF     		add	r7, sp, #0
 751              	.LCFI31:
 752              		.cfi_def_cfa_register 7
 425:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return __STM32L0xx_HAL_VERSION;
 753              		.loc 1 425 10
 754 0004 014B     		ldr	r3, .L54
 426:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 755              		.loc 1 426 1
 756 0006 1800     		movs	r0, r3
 757 0008 BD46     		mov	sp, r7
 758              		@ sp needed
 759 000a 80BD     		pop	{r7, pc}
 760              	.L55:
 761              		.align	2
 762              	.L54:
 763 000c 00050A01 		.word	17433856
 764              		.cfi_endproc
 765              	.LFE60:
 767              		.section	.text.HAL_GetREVID,"ax",%progbits
 768              		.align	1
 769              		.global	HAL_GetREVID
 770              		.syntax unified
 771              		.code	16
 772              		.thumb_func
 773              		.fpu softvfp
 775              	HAL_GetREVID:
 776              	.LFB61:
 427:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 428:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 429:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Returns the device revision identifier.
 430:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device revision identifier
 431:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 432:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetREVID(void)
 433:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 777              		.loc 1 433 1
 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 1, uses_anonymous_args = 0
 781 0000 80B5     		push	{r7, lr}
 782              	.LCFI32:
 783              		.cfi_def_cfa_offset 8
 784              		.cfi_offset 7, -8
 785              		.cfi_offset 14, -4
 786 0002 00AF     		add	r7, sp, #0
 787              	.LCFI33:
 788              		.cfi_def_cfa_register 7
 434:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return((DBGMCU->IDCODE) >> 16U);
 789              		.loc 1 434 17
 790 0004 024B     		ldr	r3, .L58
 791 0006 1B68     		ldr	r3, [r3]
 792              		.loc 1 434 27
 793 0008 1B0C     		lsrs	r3, r3, #16
 435:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 794              		.loc 1 435 1
 795 000a 1800     		movs	r0, r3
 796 000c BD46     		mov	sp, r7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 22


 797              		@ sp needed
 798 000e 80BD     		pop	{r7, pc}
 799              	.L59:
 800              		.align	2
 801              	.L58:
 802 0010 00580140 		.word	1073829888
 803              		.cfi_endproc
 804              	.LFE61:
 806              		.section	.text.HAL_GetDEVID,"ax",%progbits
 807              		.align	1
 808              		.global	HAL_GetDEVID
 809              		.syntax unified
 810              		.code	16
 811              		.thumb_func
 812              		.fpu softvfp
 814              	HAL_GetDEVID:
 815              	.LFB62:
 436:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 437:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 438:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the device identifier.
 439:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 440:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 441:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetDEVID(void)
 442:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 816              		.loc 1 442 1
 817              		.cfi_startproc
 818              		@ args = 0, pretend = 0, frame = 0
 819              		@ frame_needed = 1, uses_anonymous_args = 0
 820 0000 80B5     		push	{r7, lr}
 821              	.LCFI34:
 822              		.cfi_def_cfa_offset 8
 823              		.cfi_offset 7, -8
 824              		.cfi_offset 14, -4
 825 0002 00AF     		add	r7, sp, #0
 826              	.LCFI35:
 827              		.cfi_def_cfa_register 7
 443:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****    return((DBGMCU->IDCODE) & IDCODE_DEVID_MASK);
 828              		.loc 1 443 18
 829 0004 034B     		ldr	r3, .L62
 830 0006 1B68     		ldr	r3, [r3]
 831              		.loc 1 443 28
 832 0008 1B05     		lsls	r3, r3, #20
 833 000a 1B0D     		lsrs	r3, r3, #20
 444:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 834              		.loc 1 444 1
 835 000c 1800     		movs	r0, r3
 836 000e BD46     		mov	sp, r7
 837              		@ sp needed
 838 0010 80BD     		pop	{r7, pc}
 839              	.L63:
 840 0012 C046     		.align	2
 841              	.L62:
 842 0014 00580140 		.word	1073829888
 843              		.cfi_endproc
 844              	.LFE62:
 846              		.section	.text.HAL_GetUIDw0,"ax",%progbits
 847              		.align	1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 23


 848              		.global	HAL_GetUIDw0
 849              		.syntax unified
 850              		.code	16
 851              		.thumb_func
 852              		.fpu softvfp
 854              	HAL_GetUIDw0:
 855              	.LFB63:
 445:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 446:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 447:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the first word of the unique device identifier (UID based on 96 bits)
 448:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 449:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 450:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw0(void)
 451:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 856              		.loc 1 451 1
 857              		.cfi_startproc
 858              		@ args = 0, pretend = 0, frame = 0
 859              		@ frame_needed = 1, uses_anonymous_args = 0
 860 0000 80B5     		push	{r7, lr}
 861              	.LCFI36:
 862              		.cfi_def_cfa_offset 8
 863              		.cfi_offset 7, -8
 864              		.cfi_offset 14, -4
 865 0002 00AF     		add	r7, sp, #0
 866              	.LCFI37:
 867              		.cfi_def_cfa_register 7
 452:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)UID_BASE)));
 868              		.loc 1 452 10
 869 0004 024B     		ldr	r3, .L66
 870 0006 1B68     		ldr	r3, [r3]
 453:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 871              		.loc 1 453 1
 872 0008 1800     		movs	r0, r3
 873 000a BD46     		mov	sp, r7
 874              		@ sp needed
 875 000c 80BD     		pop	{r7, pc}
 876              	.L67:
 877 000e C046     		.align	2
 878              	.L66:
 879 0010 5000F81F 		.word	536346704
 880              		.cfi_endproc
 881              	.LFE63:
 883              		.section	.text.HAL_GetUIDw1,"ax",%progbits
 884              		.align	1
 885              		.global	HAL_GetUIDw1
 886              		.syntax unified
 887              		.code	16
 888              		.thumb_func
 889              		.fpu softvfp
 891              	HAL_GetUIDw1:
 892              	.LFB64:
 454:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 455:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 456:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the second word of the unique device identifier (UID based on 96 bits)
 457:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 458:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 459:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw1(void)
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 24


 460:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 893              		.loc 1 460 1
 894              		.cfi_startproc
 895              		@ args = 0, pretend = 0, frame = 0
 896              		@ frame_needed = 1, uses_anonymous_args = 0
 897 0000 80B5     		push	{r7, lr}
 898              	.LCFI38:
 899              		.cfi_def_cfa_offset 8
 900              		.cfi_offset 7, -8
 901              		.cfi_offset 14, -4
 902 0002 00AF     		add	r7, sp, #0
 903              	.LCFI39:
 904              		.cfi_def_cfa_register 7
 461:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x04U))));
 905              		.loc 1 461 10
 906 0004 024B     		ldr	r3, .L70
 907 0006 1B68     		ldr	r3, [r3]
 462:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 908              		.loc 1 462 1
 909 0008 1800     		movs	r0, r3
 910 000a BD46     		mov	sp, r7
 911              		@ sp needed
 912 000c 80BD     		pop	{r7, pc}
 913              	.L71:
 914 000e C046     		.align	2
 915              	.L70:
 916 0010 5400F81F 		.word	536346708
 917              		.cfi_endproc
 918              	.LFE64:
 920              		.section	.text.HAL_GetUIDw2,"ax",%progbits
 921              		.align	1
 922              		.global	HAL_GetUIDw2
 923              		.syntax unified
 924              		.code	16
 925              		.thumb_func
 926              		.fpu softvfp
 928              	HAL_GetUIDw2:
 929              	.LFB65:
 463:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 464:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 465:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the third word of the unique device identifier (UID based on 96 bits)
 466:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval Device identifier
 467:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 468:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t HAL_GetUIDw2(void)
 469:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 930              		.loc 1 469 1
 931              		.cfi_startproc
 932              		@ args = 0, pretend = 0, frame = 0
 933              		@ frame_needed = 1, uses_anonymous_args = 0
 934 0000 80B5     		push	{r7, lr}
 935              	.LCFI40:
 936              		.cfi_def_cfa_offset 8
 937              		.cfi_offset 7, -8
 938              		.cfi_offset 14, -4
 939 0002 00AF     		add	r7, sp, #0
 940              	.LCFI41:
 941              		.cfi_def_cfa_register 7
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 25


 470:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return(READ_REG(*((uint32_t *)(UID_BASE + 0x14U))));
 942              		.loc 1 470 10
 943 0004 024B     		ldr	r3, .L74
 944 0006 1B68     		ldr	r3, [r3]
 471:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 945              		.loc 1 471 1
 946 0008 1800     		movs	r0, r3
 947 000a BD46     		mov	sp, r7
 948              		@ sp needed
 949 000c 80BD     		pop	{r7, pc}
 950              	.L75:
 951 000e C046     		.align	2
 952              	.L74:
 953 0010 6400F81F 		.word	536346724
 954              		.cfi_endproc
 955              	.LFE65:
 957              		.section	.text.HAL_DBGMCU_EnableDBGSleepMode,"ax",%progbits
 958              		.align	1
 959              		.global	HAL_DBGMCU_EnableDBGSleepMode
 960              		.syntax unified
 961              		.code	16
 962              		.thumb_func
 963              		.fpu softvfp
 965              	HAL_DBGMCU_EnableDBGSleepMode:
 966              	.LFB66:
 472:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 473:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 474:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 475:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 476:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 477:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group2
 478:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL Debug functions
 479:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 480:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 481:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 482:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL Debug functions #####
 483:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 484:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 485:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during SLEEP mode
 486:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STOP mode
 487:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Enable/Disable Debug module during STANDBY mode
 488:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 489:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 490:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 491:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 492:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 493:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 494:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during SLEEP mode
 495:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 496:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 497:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGSleepMode(void)
 498:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 967              		.loc 1 498 1
 968              		.cfi_startproc
 969              		@ args = 0, pretend = 0, frame = 0
 970              		@ frame_needed = 1, uses_anonymous_args = 0
 971 0000 80B5     		push	{r7, lr}
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 26


 972              	.LCFI42:
 973              		.cfi_def_cfa_offset 8
 974              		.cfi_offset 7, -8
 975              		.cfi_offset 14, -4
 976 0002 00AF     		add	r7, sp, #0
 977              	.LCFI43:
 978              		.cfi_def_cfa_register 7
 499:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 979              		.loc 1 499 3
 980 0004 044B     		ldr	r3, .L77
 981 0006 5A68     		ldr	r2, [r3, #4]
 982 0008 034B     		ldr	r3, .L77
 983 000a 0121     		movs	r1, #1
 984 000c 0A43     		orrs	r2, r1
 985 000e 5A60     		str	r2, [r3, #4]
 500:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 986              		.loc 1 500 1
 987 0010 C046     		nop
 988 0012 BD46     		mov	sp, r7
 989              		@ sp needed
 990 0014 80BD     		pop	{r7, pc}
 991              	.L78:
 992 0016 C046     		.align	2
 993              	.L77:
 994 0018 00580140 		.word	1073829888
 995              		.cfi_endproc
 996              	.LFE66:
 998              		.section	.text.HAL_DBGMCU_DisableDBGSleepMode,"ax",%progbits
 999              		.align	1
 1000              		.global	HAL_DBGMCU_DisableDBGSleepMode
 1001              		.syntax unified
 1002              		.code	16
 1003              		.thumb_func
 1004              		.fpu softvfp
 1006              	HAL_DBGMCU_DisableDBGSleepMode:
 1007              	.LFB67:
 501:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 502:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 503:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during SLEEP mode
 504:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 505:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 506:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGSleepMode(void)
 507:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1008              		.loc 1 507 1
 1009              		.cfi_startproc
 1010              		@ args = 0, pretend = 0, frame = 0
 1011              		@ frame_needed = 1, uses_anonymous_args = 0
 1012 0000 80B5     		push	{r7, lr}
 1013              	.LCFI44:
 1014              		.cfi_def_cfa_offset 8
 1015              		.cfi_offset 7, -8
 1016              		.cfi_offset 14, -4
 1017 0002 00AF     		add	r7, sp, #0
 1018              	.LCFI45:
 1019              		.cfi_def_cfa_register 7
 508:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_SLEEP);
 1020              		.loc 1 508 3
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 27


 1021 0004 044B     		ldr	r3, .L80
 1022 0006 5A68     		ldr	r2, [r3, #4]
 1023 0008 034B     		ldr	r3, .L80
 1024 000a 0121     		movs	r1, #1
 1025 000c 8A43     		bics	r2, r1
 1026 000e 5A60     		str	r2, [r3, #4]
 509:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1027              		.loc 1 509 1
 1028 0010 C046     		nop
 1029 0012 BD46     		mov	sp, r7
 1030              		@ sp needed
 1031 0014 80BD     		pop	{r7, pc}
 1032              	.L81:
 1033 0016 C046     		.align	2
 1034              	.L80:
 1035 0018 00580140 		.word	1073829888
 1036              		.cfi_endproc
 1037              	.LFE67:
 1039              		.section	.text.HAL_DBGMCU_EnableDBGStopMode,"ax",%progbits
 1040              		.align	1
 1041              		.global	HAL_DBGMCU_EnableDBGStopMode
 1042              		.syntax unified
 1043              		.code	16
 1044              		.thumb_func
 1045              		.fpu softvfp
 1047              	HAL_DBGMCU_EnableDBGStopMode:
 1048              	.LFB68:
 510:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 511:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 512:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STOP mode
 513:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 514:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 515:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStopMode(void)
 516:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1049              		.loc 1 516 1
 1050              		.cfi_startproc
 1051              		@ args = 0, pretend = 0, frame = 0
 1052              		@ frame_needed = 1, uses_anonymous_args = 0
 1053 0000 80B5     		push	{r7, lr}
 1054              	.LCFI46:
 1055              		.cfi_def_cfa_offset 8
 1056              		.cfi_offset 7, -8
 1057              		.cfi_offset 14, -4
 1058 0002 00AF     		add	r7, sp, #0
 1059              	.LCFI47:
 1060              		.cfi_def_cfa_register 7
 517:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1061              		.loc 1 517 3
 1062 0004 044B     		ldr	r3, .L83
 1063 0006 5A68     		ldr	r2, [r3, #4]
 1064 0008 034B     		ldr	r3, .L83
 1065 000a 0221     		movs	r1, #2
 1066 000c 0A43     		orrs	r2, r1
 1067 000e 5A60     		str	r2, [r3, #4]
 518:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1068              		.loc 1 518 1
 1069 0010 C046     		nop
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 28


 1070 0012 BD46     		mov	sp, r7
 1071              		@ sp needed
 1072 0014 80BD     		pop	{r7, pc}
 1073              	.L84:
 1074 0016 C046     		.align	2
 1075              	.L83:
 1076 0018 00580140 		.word	1073829888
 1077              		.cfi_endproc
 1078              	.LFE68:
 1080              		.section	.text.HAL_DBGMCU_DisableDBGStopMode,"ax",%progbits
 1081              		.align	1
 1082              		.global	HAL_DBGMCU_DisableDBGStopMode
 1083              		.syntax unified
 1084              		.code	16
 1085              		.thumb_func
 1086              		.fpu softvfp
 1088              	HAL_DBGMCU_DisableDBGStopMode:
 1089              	.LFB69:
 519:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 520:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 521:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STOP mode
 522:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 523:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 524:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStopMode(void)
 525:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1090              		.loc 1 525 1
 1091              		.cfi_startproc
 1092              		@ args = 0, pretend = 0, frame = 0
 1093              		@ frame_needed = 1, uses_anonymous_args = 0
 1094 0000 80B5     		push	{r7, lr}
 1095              	.LCFI48:
 1096              		.cfi_def_cfa_offset 8
 1097              		.cfi_offset 7, -8
 1098              		.cfi_offset 14, -4
 1099 0002 00AF     		add	r7, sp, #0
 1100              	.LCFI49:
 1101              		.cfi_def_cfa_register 7
 526:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STOP);
 1102              		.loc 1 526 3
 1103 0004 044B     		ldr	r3, .L86
 1104 0006 5A68     		ldr	r2, [r3, #4]
 1105 0008 034B     		ldr	r3, .L86
 1106 000a 0221     		movs	r1, #2
 1107 000c 8A43     		bics	r2, r1
 1108 000e 5A60     		str	r2, [r3, #4]
 527:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1109              		.loc 1 527 1
 1110 0010 C046     		nop
 1111 0012 BD46     		mov	sp, r7
 1112              		@ sp needed
 1113 0014 80BD     		pop	{r7, pc}
 1114              	.L87:
 1115 0016 C046     		.align	2
 1116              	.L86:
 1117 0018 00580140 		.word	1073829888
 1118              		.cfi_endproc
 1119              	.LFE69:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 29


 1121              		.section	.text.HAL_DBGMCU_EnableDBGStandbyMode,"ax",%progbits
 1122              		.align	1
 1123              		.global	HAL_DBGMCU_EnableDBGStandbyMode
 1124              		.syntax unified
 1125              		.code	16
 1126              		.thumb_func
 1127              		.fpu softvfp
 1129              	HAL_DBGMCU_EnableDBGStandbyMode:
 1130              	.LFB70:
 528:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 529:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 530:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enables the Debug Module during STANDBY mode
 531:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 532:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 533:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_EnableDBGStandbyMode(void)
 534:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1131              		.loc 1 534 1
 1132              		.cfi_startproc
 1133              		@ args = 0, pretend = 0, frame = 0
 1134              		@ frame_needed = 1, uses_anonymous_args = 0
 1135 0000 80B5     		push	{r7, lr}
 1136              	.LCFI50:
 1137              		.cfi_def_cfa_offset 8
 1138              		.cfi_offset 7, -8
 1139              		.cfi_offset 14, -4
 1140 0002 00AF     		add	r7, sp, #0
 1141              	.LCFI51:
 1142              		.cfi_def_cfa_register 7
 535:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SET_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1143              		.loc 1 535 3
 1144 0004 044B     		ldr	r3, .L89
 1145 0006 5A68     		ldr	r2, [r3, #4]
 1146 0008 034B     		ldr	r3, .L89
 1147 000a 0421     		movs	r1, #4
 1148 000c 0A43     		orrs	r2, r1
 1149 000e 5A60     		str	r2, [r3, #4]
 536:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1150              		.loc 1 536 1
 1151 0010 C046     		nop
 1152 0012 BD46     		mov	sp, r7
 1153              		@ sp needed
 1154 0014 80BD     		pop	{r7, pc}
 1155              	.L90:
 1156 0016 C046     		.align	2
 1157              	.L89:
 1158 0018 00580140 		.word	1073829888
 1159              		.cfi_endproc
 1160              	.LFE70:
 1162              		.section	.text.HAL_DBGMCU_DisableDBGStandbyMode,"ax",%progbits
 1163              		.align	1
 1164              		.global	HAL_DBGMCU_DisableDBGStandbyMode
 1165              		.syntax unified
 1166              		.code	16
 1167              		.thumb_func
 1168              		.fpu softvfp
 1170              	HAL_DBGMCU_DisableDBGStandbyMode:
 1171              	.LFB71:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 30


 537:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 538:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 539:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disables the Debug Module during STANDBY mode
 540:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 541:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 542:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DisableDBGStandbyMode(void)
 543:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1172              		.loc 1 543 1
 1173              		.cfi_startproc
 1174              		@ args = 0, pretend = 0, frame = 0
 1175              		@ frame_needed = 1, uses_anonymous_args = 0
 1176 0000 80B5     		push	{r7, lr}
 1177              	.LCFI52:
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 7, -8
 1180              		.cfi_offset 14, -4
 1181 0002 00AF     		add	r7, sp, #0
 1182              	.LCFI53:
 1183              		.cfi_def_cfa_register 7
 544:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   CLEAR_BIT(DBGMCU->CR, DBGMCU_CR_DBG_STANDBY);
 1184              		.loc 1 544 3
 1185 0004 044B     		ldr	r3, .L92
 1186 0006 5A68     		ldr	r2, [r3, #4]
 1187 0008 034B     		ldr	r3, .L92
 1188 000a 0421     		movs	r1, #4
 1189 000c 8A43     		bics	r2, r1
 1190 000e 5A60     		str	r2, [r3, #4]
 545:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1191              		.loc 1 545 1
 1192 0010 C046     		nop
 1193 0012 BD46     		mov	sp, r7
 1194              		@ sp needed
 1195 0014 80BD     		pop	{r7, pc}
 1196              	.L93:
 1197 0016 C046     		.align	2
 1198              	.L92:
 1199 0018 00580140 		.word	1073829888
 1200              		.cfi_endproc
 1201              	.LFE71:
 1203              		.section	.text.HAL_DBGMCU_DBG_EnableLowPowerConfig,"ax",%progbits
 1204              		.align	1
 1205              		.global	HAL_DBGMCU_DBG_EnableLowPowerConfig
 1206              		.syntax unified
 1207              		.code	16
 1208              		.thumb_func
 1209              		.fpu softvfp
 1211              	HAL_DBGMCU_DBG_EnableLowPowerConfig:
 1212              	.LFB72:
 546:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 547:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 548:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Enable low power mode behavior when the MCU is in Debug mode.
 549:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 550:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
 551:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 552:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 553:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 554:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 31


 555:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 556:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_EnableLowPowerConfig(uint32_t Periph)
 557:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1213              		.loc 1 557 1
 1214              		.cfi_startproc
 1215              		@ args = 0, pretend = 0, frame = 8
 1216              		@ frame_needed = 1, uses_anonymous_args = 0
 1217 0000 80B5     		push	{r7, lr}
 1218              	.LCFI54:
 1219              		.cfi_def_cfa_offset 8
 1220              		.cfi_offset 7, -8
 1221              		.cfi_offset 14, -4
 1222 0002 82B0     		sub	sp, sp, #8
 1223              	.LCFI55:
 1224              		.cfi_def_cfa_offset 16
 1225 0004 00AF     		add	r7, sp, #0
 1226              	.LCFI56:
 1227              		.cfi_def_cfa_register 7
 1228 0006 7860     		str	r0, [r7, #4]
 558:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 559:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 560:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 561:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   DBGMCU->CR |= Periph;
 1229              		.loc 1 561 14
 1230 0008 044B     		ldr	r3, .L95
 1231 000a 5968     		ldr	r1, [r3, #4]
 1232 000c 034B     		ldr	r3, .L95
 1233 000e 7A68     		ldr	r2, [r7, #4]
 1234 0010 0A43     		orrs	r2, r1
 1235 0012 5A60     		str	r2, [r3, #4]
 562:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 563:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1236              		.loc 1 563 1
 1237 0014 C046     		nop
 1238 0016 BD46     		mov	sp, r7
 1239 0018 02B0     		add	sp, sp, #8
 1240              		@ sp needed
 1241 001a 80BD     		pop	{r7, pc}
 1242              	.L96:
 1243              		.align	2
 1244              	.L95:
 1245 001c 00580140 		.word	1073829888
 1246              		.cfi_endproc
 1247              	.LFE72:
 1249              		.section	.text.HAL_DBGMCU_DBG_DisableLowPowerConfig,"ax",%progbits
 1250              		.align	1
 1251              		.global	HAL_DBGMCU_DBG_DisableLowPowerConfig
 1252              		.syntax unified
 1253              		.code	16
 1254              		.thumb_func
 1255              		.fpu softvfp
 1257              	HAL_DBGMCU_DBG_DisableLowPowerConfig:
 1258              	.LFB73:
 564:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 565:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Disable low power mode behavior when the MCU is in Debug mode.
 566:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param Periph: specifies the low power mode.
 567:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *   This parameter can be any combination of the following values:
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 32


 568:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_SLEEP: Keep debugger connection during SLEEP mode
 569:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STOP: Keep debugger connection during STOP mode
 570:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg DBGMCU_STANDBY: Keep debugger connection during STANDBY mode
 571:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 572:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 573:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_DBGMCU_DBG_DisableLowPowerConfig(uint32_t Periph)
 574:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1259              		.loc 1 574 1
 1260              		.cfi_startproc
 1261              		@ args = 0, pretend = 0, frame = 8
 1262              		@ frame_needed = 1, uses_anonymous_args = 0
 1263 0000 80B5     		push	{r7, lr}
 1264              	.LCFI57:
 1265              		.cfi_def_cfa_offset 8
 1266              		.cfi_offset 7, -8
 1267              		.cfi_offset 14, -4
 1268 0002 82B0     		sub	sp, sp, #8
 1269              	.LCFI58:
 1270              		.cfi_def_cfa_offset 16
 1271 0004 00AF     		add	r7, sp, #0
 1272              	.LCFI59:
 1273              		.cfi_def_cfa_register 7
 1274 0006 7860     		str	r0, [r7, #4]
 575:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 576:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_DBGMCU_PERIPH(Periph));
 577:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   {
 578:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     DBGMCU->CR &= ~Periph;
 1275              		.loc 1 578 16
 1276 0008 054B     		ldr	r3, .L98
 1277 000a 5A68     		ldr	r2, [r3, #4]
 1278              		.loc 1 578 19
 1279 000c 7B68     		ldr	r3, [r7, #4]
 1280 000e D943     		mvns	r1, r3
 1281              		.loc 1 578 16
 1282 0010 034B     		ldr	r3, .L98
 1283 0012 0A40     		ands	r2, r1
 1284 0014 5A60     		str	r2, [r3, #4]
 579:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   }
 580:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1285              		.loc 1 580 1
 1286 0016 C046     		nop
 1287 0018 BD46     		mov	sp, r7
 1288 001a 02B0     		add	sp, sp, #8
 1289              		@ sp needed
 1290 001c 80BD     		pop	{r7, pc}
 1291              	.L99:
 1292 001e C046     		.align	2
 1293              	.L98:
 1294 0020 00580140 		.word	1073829888
 1295              		.cfi_endproc
 1296              	.LFE73:
 1298              		.section	.text.HAL_SYSCFG_GetBootMode,"ax",%progbits
 1299              		.align	1
 1300              		.global	HAL_SYSCFG_GetBootMode
 1301              		.syntax unified
 1302              		.code	16
 1303              		.thumb_func
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 33


 1304              		.fpu softvfp
 1306              	HAL_SYSCFG_GetBootMode:
 1307              	.LFB74:
 581:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 582:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 583:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @}
 584:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 585:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 586:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /** @addtogroup HAL_Exported_Functions_Group3
 587:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *  @brief    HAL SYSCFG configuration functions
 588:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  *
 589:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @verbatim
 590:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 591:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****                       ##### HAL SYSCFG configuration functions #####
 592:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****  ===============================================================================
 593:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     [..]  This section provides functions allowing to:
 594:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Return the boot mode
 595:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Select the output of internal reference voltage (VREFINT)
 596:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****       (+) Lock/Unlock the SYSCFG VREF register values
 597:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 598:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** @endverbatim
 599:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @{
 600:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 601:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 602:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 603:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Returns the boot mode as configured by user.
 604:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval The boot mode as configured by user. The returned value can be one
 605:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *         of the following values:
 606:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000000 : Boot is configured in Main Flash memory
 607:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000100 : Boot is configured in System Flash memory
 608:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *              - 0x00000300 : Boot is configured in Embedded SRAM memory
 609:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 610:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** uint32_t  HAL_SYSCFG_GetBootMode(void)
 611:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1308              		.loc 1 611 1
 1309              		.cfi_startproc
 1310              		@ args = 0, pretend = 0, frame = 0
 1311              		@ frame_needed = 1, uses_anonymous_args = 0
 1312 0000 80B5     		push	{r7, lr}
 1313              	.LCFI60:
 1314              		.cfi_def_cfa_offset 8
 1315              		.cfi_offset 7, -8
 1316              		.cfi_offset 14, -4
 1317 0002 00AF     		add	r7, sp, #0
 1318              	.LCFI61:
 1319              		.cfi_def_cfa_register 7
 612:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   return (SYSCFG->CFGR1 & SYSCFG_CFGR1_BOOT_MODE);
 1320              		.loc 1 612 17
 1321 0004 034B     		ldr	r3, .L102
 1322 0006 1A68     		ldr	r2, [r3]
 1323              		.loc 1 612 25
 1324 0008 C023     		movs	r3, #192
 1325 000a 9B00     		lsls	r3, r3, #2
 1326 000c 1340     		ands	r3, r2
 613:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1327              		.loc 1 613 1
 1328 000e 1800     		movs	r0, r3
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 34


 1329 0010 BD46     		mov	sp, r7
 1330              		@ sp needed
 1331 0012 80BD     		pop	{r7, pc}
 1332              	.L103:
 1333              		.align	2
 1334              	.L102:
 1335 0014 00000140 		.word	1073807360
 1336              		.cfi_endproc
 1337              	.LFE74:
 1339              		.section	.text.HAL_SYSCFG_VREFINT_OutputSelect,"ax",%progbits
 1340              		.align	1
 1341              		.global	HAL_SYSCFG_VREFINT_OutputSelect
 1342              		.syntax unified
 1343              		.code	16
 1344              		.thumb_func
 1345              		.fpu softvfp
 1347              	HAL_SYSCFG_VREFINT_OutputSelect:
 1348              	.LFB75:
 614:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 615:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 616:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief Selects the output of internal reference voltage (VREFINT).
 617:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        The VREFINT output can be routed to(PB0) or
 618:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        (PB1) or both.
 619:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @param SYSCFG_Vrefint_OUTPUT: new state of the Vrefint output.
 620:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *        This parameter can be one of the following values:
 621:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_NONE
 622:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0
 623:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB1
 624:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   *     @arg SYSCFG_VREFINT_OUT_PB0_PB1
 625:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 626:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 627:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_VREFINT_OutputSelect(uint32_t SYSCFG_Vrefint_OUTPUT)
 628:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1349              		.loc 1 628 1
 1350              		.cfi_startproc
 1351              		@ args = 0, pretend = 0, frame = 8
 1352              		@ frame_needed = 1, uses_anonymous_args = 0
 1353 0000 80B5     		push	{r7, lr}
 1354              	.LCFI62:
 1355              		.cfi_def_cfa_offset 8
 1356              		.cfi_offset 7, -8
 1357              		.cfi_offset 14, -4
 1358 0002 82B0     		sub	sp, sp, #8
 1359              	.LCFI63:
 1360              		.cfi_def_cfa_offset 16
 1361 0004 00AF     		add	r7, sp, #0
 1362              	.LCFI64:
 1363              		.cfi_def_cfa_register 7
 1364 0006 7860     		str	r0, [r7, #4]
 629:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Check the parameters */
 630:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   assert_param(IS_SYSCFG_VREFINT_OUT_SELECT(SYSCFG_Vrefint_OUTPUT));
 631:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 632:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   /* Set the output Vrefint pin */
 633:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 &= ~(SYSCFG_CFGR3_VREF_OUT);
 1365              		.loc 1 633 17
 1366 0008 074B     		ldr	r3, .L105
 1367 000a 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 35


 1368 000c 064B     		ldr	r3, .L105
 1369 000e 3021     		movs	r1, #48
 1370 0010 8A43     		bics	r2, r1
 1371 0012 1A62     		str	r2, [r3, #32]
 634:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   SYSCFG->CFGR3 |= (uint32_t)(SYSCFG_Vrefint_OUTPUT);
 1372              		.loc 1 634 17
 1373 0014 044B     		ldr	r3, .L105
 1374 0016 196A     		ldr	r1, [r3, #32]
 1375 0018 034B     		ldr	r3, .L105
 1376 001a 7A68     		ldr	r2, [r7, #4]
 1377 001c 0A43     		orrs	r2, r1
 1378 001e 1A62     		str	r2, [r3, #32]
 635:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1379              		.loc 1 635 1
 1380 0020 C046     		nop
 1381 0022 BD46     		mov	sp, r7
 1382 0024 02B0     		add	sp, sp, #8
 1383              		@ sp needed
 1384 0026 80BD     		pop	{r7, pc}
 1385              	.L106:
 1386              		.align	2
 1387              	.L105:
 1388 0028 00000140 		.word	1073807360
 1389              		.cfi_endproc
 1390              	.LFE75:
 1392              		.section	.text.HAL_SYSCFG_Enable_Lock_VREFINT,"ax",%progbits
 1393              		.align	1
 1394              		.global	HAL_SYSCFG_Enable_Lock_VREFINT
 1395              		.syntax unified
 1396              		.code	16
 1397              		.thumb_func
 1398              		.fpu softvfp
 1400              	HAL_SYSCFG_Enable_Lock_VREFINT:
 1401              	.LFB76:
 636:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 637:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 638:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Lock the SYSCFG VREF register values
 639:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 640:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 641:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Enable_Lock_VREFINT(void)
 642:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1402              		.loc 1 642 1
 1403              		.cfi_startproc
 1404              		@ args = 0, pretend = 0, frame = 0
 1405              		@ frame_needed = 1, uses_anonymous_args = 0
 1406 0000 80B5     		push	{r7, lr}
 1407              	.LCFI65:
 1408              		.cfi_def_cfa_offset 8
 1409              		.cfi_offset 7, -8
 1410              		.cfi_offset 14, -4
 1411 0002 00AF     		add	r7, sp, #0
 1412              	.LCFI66:
 1413              		.cfi_def_cfa_register 7
 643:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Enable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 644:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     SET_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 1414              		.loc 1 644 5
 1415 0004 044B     		ldr	r3, .L108
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 36


 1416 0006 1A6A     		ldr	r2, [r3, #32]
 1417 0008 034B     		ldr	r3, .L108
 1418 000a 8021     		movs	r1, #128
 1419 000c 0906     		lsls	r1, r1, #24
 1420 000e 0A43     		orrs	r2, r1
 1421 0010 1A62     		str	r2, [r3, #32]
 645:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1422              		.loc 1 645 1
 1423 0012 C046     		nop
 1424 0014 BD46     		mov	sp, r7
 1425              		@ sp needed
 1426 0016 80BD     		pop	{r7, pc}
 1427              	.L109:
 1428              		.align	2
 1429              	.L108:
 1430 0018 00000140 		.word	1073807360
 1431              		.cfi_endproc
 1432              	.LFE76:
 1434              		.section	.text.HAL_SYSCFG_Disable_Lock_VREFINT,"ax",%progbits
 1435              		.align	1
 1436              		.global	HAL_SYSCFG_Disable_Lock_VREFINT
 1437              		.syntax unified
 1438              		.code	16
 1439              		.thumb_func
 1440              		.fpu softvfp
 1442              	HAL_SYSCFG_Disable_Lock_VREFINT:
 1443              	.LFB77:
 646:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** 
 647:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** /**
 648:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @brief  Unlock the overall SYSCFG VREF register values
 649:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   * @retval None
 650:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****   */
 651:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** void HAL_SYSCFG_Disable_Lock_VREFINT(void)
 652:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** {
 1444              		.loc 1 652 1
 1445              		.cfi_startproc
 1446              		@ args = 0, pretend = 0, frame = 0
 1447              		@ frame_needed = 1, uses_anonymous_args = 0
 1448 0000 80B5     		push	{r7, lr}
 1449              	.LCFI67:
 1450              		.cfi_def_cfa_offset 8
 1451              		.cfi_offset 7, -8
 1452              		.cfi_offset 14, -4
 1453 0002 00AF     		add	r7, sp, #0
 1454              	.LCFI68:
 1455              		.cfi_def_cfa_register 7
 653:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     /* Disable the LOCK by setting REF_LOCK bit in the CFGR3 register */
 654:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c ****     CLEAR_BIT(SYSCFG->CFGR3, SYSCFG_CFGR3_REF_LOCK);
 1456              		.loc 1 654 5
 1457 0004 044B     		ldr	r3, .L111
 1458 0006 1A6A     		ldr	r2, [r3, #32]
 1459 0008 034B     		ldr	r3, .L111
 1460 000a 5200     		lsls	r2, r2, #1
 1461 000c 5208     		lsrs	r2, r2, #1
 1462 000e 1A62     		str	r2, [r3, #32]
 655:Drivers/STM32L0xx_HAL_Driver/Src/stm32l0xx_hal.c **** }
 1463              		.loc 1 655 1
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 37


 1464 0010 C046     		nop
 1465 0012 BD46     		mov	sp, r7
 1466              		@ sp needed
 1467 0014 80BD     		pop	{r7, pc}
 1468              	.L112:
 1469 0016 C046     		.align	2
 1470              	.L111:
 1471 0018 00000140 		.word	1073807360
 1472              		.cfi_endproc
 1473              	.LFE77:
 1475              		.text
 1476              	.Letext0:
 1477              		.file 2 "/Applications/ARM/arm-none-eabi/include/machine/_default_types.h"
 1478              		.file 3 "/Applications/ARM/arm-none-eabi/include/sys/_stdint.h"
 1479              		.file 4 "Drivers/CMSIS/Include/core_cm0plus.h"
 1480              		.file 5 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/stm32l053xx.h"
 1481              		.file 6 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal_def.h"
 1482              		.file 7 "Drivers/STM32L0xx_HAL_Driver/Inc/stm32l0xx_hal.h"
 1483              		.file 8 "Drivers/CMSIS/Device/ST/STM32L0xx/Include/system_stm32l0xx.h"
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 38


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32l0xx_hal.c
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:20     .bss.uwTick:0000000000000000 uwTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:17     .bss.uwTick:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:27     .data.uwTickPrio:0000000000000000 uwTickPrio
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:24     .data.uwTickPrio:0000000000000000 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:33     .data.uwTickFreq:0000000000000000 uwTickFreq
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:36     .text.HAL_Init:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:44     .text.HAL_Init:0000000000000000 HAL_Init
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:247    .text.HAL_InitTick:0000000000000000 HAL_InitTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:186    .text.HAL_MspInit:0000000000000000 HAL_MspInit
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:100    .text.HAL_Init:000000000000003c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:105    .text.HAL_DeInit:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:112    .text.HAL_DeInit:0000000000000000 HAL_DeInit
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:216    .text.HAL_MspDeInit:0000000000000000 HAL_MspDeInit
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:174    .text.HAL_DeInit:0000000000000048 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:179    .text.HAL_MspInit:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:209    .text.HAL_MspDeInit:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:240    .text.HAL_InitTick:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:322    .text.HAL_InitTick:000000000000005c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:329    .text.HAL_IncTick:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:336    .text.HAL_IncTick:0000000000000000 HAL_IncTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:367    .text.HAL_IncTick:000000000000001c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:373    .text.HAL_GetTick:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:380    .text.HAL_GetTick:0000000000000000 HAL_GetTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:405    .text.HAL_GetTick:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:410    .text.HAL_GetTickPrio:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:417    .text.HAL_GetTickPrio:0000000000000000 HAL_GetTickPrio
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:442    .text.HAL_GetTickPrio:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:447    .text.HAL_SetTickFreq:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:454    .text.HAL_SetTickFreq:0000000000000000 HAL_SetTickFreq
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:534    .text.HAL_SetTickFreq:0000000000000064 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:540    .text.HAL_GetTickFreq:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:547    .text.HAL_GetTickFreq:0000000000000000 HAL_GetTickFreq
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:572    .text.HAL_GetTickFreq:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:577    .text.HAL_Delay:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:584    .text.HAL_Delay:0000000000000000 HAL_Delay
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:645    .text.HAL_Delay:0000000000000044 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:650    .text.HAL_SuspendTick:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:657    .text.HAL_SuspendTick:0000000000000000 HAL_SuspendTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:686    .text.HAL_SuspendTick:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:691    .text.HAL_ResumeTick:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:698    .text.HAL_ResumeTick:0000000000000000 HAL_ResumeTick
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:727    .text.HAL_ResumeTick:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:732    .text.HAL_GetHalVersion:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:739    .text.HAL_GetHalVersion:0000000000000000 HAL_GetHalVersion
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:763    .text.HAL_GetHalVersion:000000000000000c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:768    .text.HAL_GetREVID:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:775    .text.HAL_GetREVID:0000000000000000 HAL_GetREVID
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:802    .text.HAL_GetREVID:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:807    .text.HAL_GetDEVID:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:814    .text.HAL_GetDEVID:0000000000000000 HAL_GetDEVID
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:842    .text.HAL_GetDEVID:0000000000000014 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:847    .text.HAL_GetUIDw0:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:854    .text.HAL_GetUIDw0:0000000000000000 HAL_GetUIDw0
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:879    .text.HAL_GetUIDw0:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:884    .text.HAL_GetUIDw1:0000000000000000 $t
ARM GAS  /var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s 			page 39


/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:891    .text.HAL_GetUIDw1:0000000000000000 HAL_GetUIDw1
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:916    .text.HAL_GetUIDw1:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:921    .text.HAL_GetUIDw2:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:928    .text.HAL_GetUIDw2:0000000000000000 HAL_GetUIDw2
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:953    .text.HAL_GetUIDw2:0000000000000010 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:958    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:965    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000000 HAL_DBGMCU_EnableDBGSleepMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:994    .text.HAL_DBGMCU_EnableDBGSleepMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:999    .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1006   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000000 HAL_DBGMCU_DisableDBGSleepMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1035   .text.HAL_DBGMCU_DisableDBGSleepMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1040   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1047   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000000 HAL_DBGMCU_EnableDBGStopMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1076   .text.HAL_DBGMCU_EnableDBGStopMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1081   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1088   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000000 HAL_DBGMCU_DisableDBGStopMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1117   .text.HAL_DBGMCU_DisableDBGStopMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1122   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1129   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000000 HAL_DBGMCU_EnableDBGStandbyMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1158   .text.HAL_DBGMCU_EnableDBGStandbyMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1163   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1170   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000000 HAL_DBGMCU_DisableDBGStandbyMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1199   .text.HAL_DBGMCU_DisableDBGStandbyMode:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1204   .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1211   .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:0000000000000000 HAL_DBGMCU_DBG_EnableLowPowerConfig
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1245   .text.HAL_DBGMCU_DBG_EnableLowPowerConfig:000000000000001c $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1250   .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1257   .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000000000000 HAL_DBGMCU_DBG_DisableLowPowerConfig
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1294   .text.HAL_DBGMCU_DBG_DisableLowPowerConfig:0000000000000020 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1299   .text.HAL_SYSCFG_GetBootMode:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1306   .text.HAL_SYSCFG_GetBootMode:0000000000000000 HAL_SYSCFG_GetBootMode
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1335   .text.HAL_SYSCFG_GetBootMode:0000000000000014 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1340   .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1347   .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000000 HAL_SYSCFG_VREFINT_OutputSelect
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1388   .text.HAL_SYSCFG_VREFINT_OutputSelect:0000000000000028 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1393   .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1400   .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000000 HAL_SYSCFG_Enable_Lock_VREFINT
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1430   .text.HAL_SYSCFG_Enable_Lock_VREFINT:0000000000000018 $d
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1435   .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000000000000 $t
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1442   .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000000000000 HAL_SYSCFG_Disable_Lock_VREFINT
/var/folders/fs/dxwfnrqj18z860lwl3d6f5t00000gn/T//cc07cQoW.s:1471   .text.HAL_SYSCFG_Disable_Lock_VREFINT:0000000000000018 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
HAL_SYSTICK_Config
HAL_NVIC_SetPriority
SystemCoreClock
