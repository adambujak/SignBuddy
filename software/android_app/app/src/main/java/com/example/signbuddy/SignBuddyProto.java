// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: sign_buddy.proto

package com.example.signbuddy;

public final class SignBuddyProto {
  private SignBuddyProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }
  public interface SBPGestureDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SBPGestureData)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required string letter = 1;</code>
     */
    boolean hasLetter();
    /**
     * <code>required string letter = 1;</code>
     */
    java.lang.String getLetter();
    /**
     * <code>required string letter = 1;</code>
     */
    com.google.protobuf.ByteString
        getLetterBytes();

    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    java.util.List<com.example.signbuddy.SignBuddyProto.SBPSample> 
        getSamplesList();
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPSample getSamples(int index);
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    int getSamplesCount();
  }
  /**
   * Protobuf type {@code SBPGestureData}
   */
  public  static final class SBPGestureData extends
      com.google.protobuf.GeneratedMessageLite<
          SBPGestureData, SBPGestureData.Builder> implements
      // @@protoc_insertion_point(message_implements:SBPGestureData)
      SBPGestureDataOrBuilder {
    private SBPGestureData() {
      letter_ = "";
      samples_ = emptyProtobufList();
    }
    private int bitField0_;
    public static final int LETTER_FIELD_NUMBER = 1;
    private java.lang.String letter_;
    /**
     * <code>required string letter = 1;</code>
     */
    public boolean hasLetter() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string letter = 1;</code>
     */
    public java.lang.String getLetter() {
      return letter_;
    }
    /**
     * <code>required string letter = 1;</code>
     */
    public com.google.protobuf.ByteString
        getLetterBytes() {
      return com.google.protobuf.ByteString.copyFromUtf8(letter_);
    }
    /**
     * <code>required string letter = 1;</code>
     */
    private void setLetter(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      letter_ = value;
    }
    /**
     * <code>required string letter = 1;</code>
     */
    private void clearLetter() {
      bitField0_ = (bitField0_ & ~0x00000001);
      letter_ = getDefaultInstance().getLetter();
    }
    /**
     * <code>required string letter = 1;</code>
     */
    private void setLetterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
      letter_ = value.toStringUtf8();
    }

    public static final int SAMPLES_FIELD_NUMBER = 2;
    private com.google.protobuf.Internal.ProtobufList<com.example.signbuddy.SignBuddyProto.SBPSample> samples_;
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    public java.util.List<com.example.signbuddy.SignBuddyProto.SBPSample> getSamplesList() {
      return samples_;
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    public java.util.List<? extends com.example.signbuddy.SignBuddyProto.SBPSampleOrBuilder> 
        getSamplesOrBuilderList() {
      return samples_;
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    public int getSamplesCount() {
      return samples_.size();
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSample getSamples(int index) {
      return samples_.get(index);
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSampleOrBuilder getSamplesOrBuilder(
        int index) {
      return samples_.get(index);
    }
    private void ensureSamplesIsMutable() {
      if (!samples_.isModifiable()) {
        samples_ =
            com.google.protobuf.GeneratedMessageLite.mutableCopy(samples_);
       }
    }

    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void setSamples(
        int index, com.example.signbuddy.SignBuddyProto.SBPSample value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSamplesIsMutable();
      samples_.set(index, value);
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void setSamples(
        int index, com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
      ensureSamplesIsMutable();
      samples_.set(index, builderForValue.build());
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void addSamples(com.example.signbuddy.SignBuddyProto.SBPSample value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSamplesIsMutable();
      samples_.add(value);
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void addSamples(
        int index, com.example.signbuddy.SignBuddyProto.SBPSample value) {
      if (value == null) {
        throw new NullPointerException();
      }
      ensureSamplesIsMutable();
      samples_.add(index, value);
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void addSamples(
        com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
      ensureSamplesIsMutable();
      samples_.add(builderForValue.build());
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void addSamples(
        int index, com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
      ensureSamplesIsMutable();
      samples_.add(index, builderForValue.build());
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void addAllSamples(
        java.lang.Iterable<? extends com.example.signbuddy.SignBuddyProto.SBPSample> values) {
      ensureSamplesIsMutable();
      com.google.protobuf.AbstractMessageLite.addAll(
          values, samples_);
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void clearSamples() {
      samples_ = emptyProtobufList();
    }
    /**
     * <code>repeated .SBPSample samples = 2;</code>
     */
    private void removeSamples(int index) {
      ensureSamplesIsMutable();
      samples_.remove(index);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeString(1, getLetter());
      }
      for (int i = 0; i < samples_.size(); i++) {
        output.writeMessage(2, samples_.get(i));
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getLetter());
      }
      for (int i = 0; i < samples_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, samples_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPGestureData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPGestureData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code SBPGestureData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.example.signbuddy.SignBuddyProto.SBPGestureData, Builder> implements
        // @@protoc_insertion_point(builder_implements:SBPGestureData)
        com.example.signbuddy.SignBuddyProto.SBPGestureDataOrBuilder {
      // Construct using com.example.signbuddy.SignBuddyProto.SBPGestureData.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required string letter = 1;</code>
       */
      public boolean hasLetter() {
        return instance.hasLetter();
      }
      /**
       * <code>required string letter = 1;</code>
       */
      public java.lang.String getLetter() {
        return instance.getLetter();
      }
      /**
       * <code>required string letter = 1;</code>
       */
      public com.google.protobuf.ByteString
          getLetterBytes() {
        return instance.getLetterBytes();
      }
      /**
       * <code>required string letter = 1;</code>
       */
      public Builder setLetter(
          java.lang.String value) {
        copyOnWrite();
        instance.setLetter(value);
        return this;
      }
      /**
       * <code>required string letter = 1;</code>
       */
      public Builder clearLetter() {
        copyOnWrite();
        instance.clearLetter();
        return this;
      }
      /**
       * <code>required string letter = 1;</code>
       */
      public Builder setLetterBytes(
          com.google.protobuf.ByteString value) {
        copyOnWrite();
        instance.setLetterBytes(value);
        return this;
      }

      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public java.util.List<com.example.signbuddy.SignBuddyProto.SBPSample> getSamplesList() {
        return java.util.Collections.unmodifiableList(
            instance.getSamplesList());
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public int getSamplesCount() {
        return instance.getSamplesCount();
      }/**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPSample getSamples(int index) {
        return instance.getSamples(index);
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder setSamples(
          int index, com.example.signbuddy.SignBuddyProto.SBPSample value) {
        copyOnWrite();
        instance.setSamples(index, value);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder setSamples(
          int index, com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
        copyOnWrite();
        instance.setSamples(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder addSamples(com.example.signbuddy.SignBuddyProto.SBPSample value) {
        copyOnWrite();
        instance.addSamples(value);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder addSamples(
          int index, com.example.signbuddy.SignBuddyProto.SBPSample value) {
        copyOnWrite();
        instance.addSamples(index, value);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder addSamples(
          com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
        copyOnWrite();
        instance.addSamples(builderForValue);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder addSamples(
          int index, com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
        copyOnWrite();
        instance.addSamples(index, builderForValue);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder addAllSamples(
          java.lang.Iterable<? extends com.example.signbuddy.SignBuddyProto.SBPSample> values) {
        copyOnWrite();
        instance.addAllSamples(values);
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder clearSamples() {
        copyOnWrite();
        instance.clearSamples();
        return this;
      }
      /**
       * <code>repeated .SBPSample samples = 2;</code>
       */
      public Builder removeSamples(int index) {
        copyOnWrite();
        instance.removeSamples(index);
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SBPGestureData)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.example.signbuddy.SignBuddyProto.SBPGestureData();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasLetter()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          for (int i = 0; i < getSamplesCount(); i++) {
            if (!getSamples(i).isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          samples_.makeImmutable();
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.example.signbuddy.SignBuddyProto.SBPGestureData other = (com.example.signbuddy.SignBuddyProto.SBPGestureData) arg1;
          letter_ = visitor.visitString(
              hasLetter(), letter_,
              other.hasLetter(), other.letter_);
          samples_= visitor.visitList(samples_, other.samples_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 10: {
                  String s = input.readString();
                  bitField0_ |= 0x00000001;
                  letter_ = s;
                  break;
                }
                case 18: {
                  if (!samples_.isModifiable()) {
                    samples_ =
                        com.google.protobuf.GeneratedMessageLite.mutableCopy(samples_);
                  }
                  samples_.add(
                      input.readMessage(com.example.signbuddy.SignBuddyProto.SBPSample.parser(), extensionRegistry));
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPGestureData.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SBPGestureData)
    private static final com.example.signbuddy.SignBuddyProto.SBPGestureData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SBPGestureData();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.example.signbuddy.SignBuddyProto.SBPGestureData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SBPGestureData> PARSER;

    public static com.google.protobuf.Parser<SBPGestureData> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SBPMessageOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SBPMessage)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 id = 1;</code>
     */
    boolean hasId();
    /**
     * <code>required uint32 id = 1;</code>
     */
    int getId();

    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    boolean hasSample();
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPSample getSample();

    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPStatus getStatus();

    public com.example.signbuddy.SignBuddyProto.SBPMessage.PayloadCase getPayloadCase();
  }
  /**
   * Protobuf type {@code SBPMessage}
   */
  public  static final class SBPMessage extends
      com.google.protobuf.GeneratedMessageLite<
          SBPMessage, SBPMessage.Builder> implements
      // @@protoc_insertion_point(message_implements:SBPMessage)
      SBPMessageOrBuilder {
    private SBPMessage() {
    }
    private int bitField0_;
    private int payloadCase_ = 0;
    private java.lang.Object payload_;
    public enum PayloadCase
        implements com.google.protobuf.Internal.EnumLite {
      SAMPLE(2),
      STATUS(3),
      PAYLOAD_NOT_SET(0);
      private final int value;
      private PayloadCase(int value) {
        this.value = value;
      }
      /**
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static PayloadCase valueOf(int value) {
        return forNumber(value);
      }

      public static PayloadCase forNumber(int value) {
        switch (value) {
          case 2: return SAMPLE;
          case 3: return STATUS;
          case 0: return PAYLOAD_NOT_SET;
          default: return null;
        }
      }
      public int getNumber() {
        return this.value;
      }
    };

    public PayloadCase
    getPayloadCase() {
      return PayloadCase.forNumber(
          payloadCase_);
    }

    private void clearPayload() {
      payloadCase_ = 0;
      payload_ = null;
    }

    public static final int ID_FIELD_NUMBER = 1;
    private int id_;
    /**
     * <code>required uint32 id = 1;</code>
     */
    public boolean hasId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 id = 1;</code>
     */
    public int getId() {
      return id_;
    }
    /**
     * <code>required uint32 id = 1;</code>
     */
    private void setId(int value) {
      bitField0_ |= 0x00000001;
      id_ = value;
    }
    /**
     * <code>required uint32 id = 1;</code>
     */
    private void clearId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      id_ = 0;
    }

    public static final int SAMPLE_FIELD_NUMBER = 2;
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    public boolean hasSample() {
      return payloadCase_ == 2;
    }
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSample getSample() {
      if (payloadCase_ == 2) {
         return (com.example.signbuddy.SignBuddyProto.SBPSample) payload_;
      }
      return com.example.signbuddy.SignBuddyProto.SBPSample.getDefaultInstance();
    }
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    private void setSample(com.example.signbuddy.SignBuddyProto.SBPSample value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 2;
    }
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    private void setSample(
        com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 2;
    }
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    private void mergeSample(com.example.signbuddy.SignBuddyProto.SBPSample value) {
      if (payloadCase_ == 2 &&
          payload_ != com.example.signbuddy.SignBuddyProto.SBPSample.getDefaultInstance()) {
        payload_ = com.example.signbuddy.SignBuddyProto.SBPSample.newBuilder((com.example.signbuddy.SignBuddyProto.SBPSample) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 2;
    }
    /**
     * <code>optional .SBPSample sample = 2;</code>
     */
    private void clearSample() {
      if (payloadCase_ == 2) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public static final int STATUS_FIELD_NUMBER = 3;
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    public boolean hasStatus() {
      return payloadCase_ == 3;
    }
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPStatus getStatus() {
      if (payloadCase_ == 3) {
         return (com.example.signbuddy.SignBuddyProto.SBPStatus) payload_;
      }
      return com.example.signbuddy.SignBuddyProto.SBPStatus.getDefaultInstance();
    }
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    private void setStatus(com.example.signbuddy.SignBuddyProto.SBPStatus value) {
      if (value == null) {
        throw new NullPointerException();
      }
      payload_ = value;
      payloadCase_ = 3;
    }
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    private void setStatus(
        com.example.signbuddy.SignBuddyProto.SBPStatus.Builder builderForValue) {
      payload_ = builderForValue.build();
      payloadCase_ = 3;
    }
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    private void mergeStatus(com.example.signbuddy.SignBuddyProto.SBPStatus value) {
      if (payloadCase_ == 3 &&
          payload_ != com.example.signbuddy.SignBuddyProto.SBPStatus.getDefaultInstance()) {
        payload_ = com.example.signbuddy.SignBuddyProto.SBPStatus.newBuilder((com.example.signbuddy.SignBuddyProto.SBPStatus) payload_)
            .mergeFrom(value).buildPartial();
      } else {
        payload_ = value;
      }
      payloadCase_ = 3;
    }
    /**
     * <code>optional .SBPStatus status = 3;</code>
     */
    private void clearStatus() {
      if (payloadCase_ == 3) {
        payloadCase_ = 0;
        payload_ = null;
      }
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, id_);
      }
      if (payloadCase_ == 2) {
        output.writeMessage(2, (com.example.signbuddy.SignBuddyProto.SBPSample) payload_);
      }
      if (payloadCase_ == 3) {
        output.writeMessage(3, (com.example.signbuddy.SignBuddyProto.SBPStatus) payload_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, id_);
      }
      if (payloadCase_ == 2) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, (com.example.signbuddy.SignBuddyProto.SBPSample) payload_);
      }
      if (payloadCase_ == 3) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, (com.example.signbuddy.SignBuddyProto.SBPStatus) payload_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPMessage parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPMessage prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code SBPMessage}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.example.signbuddy.SignBuddyProto.SBPMessage, Builder> implements
        // @@protoc_insertion_point(builder_implements:SBPMessage)
        com.example.signbuddy.SignBuddyProto.SBPMessageOrBuilder {
      // Construct using com.example.signbuddy.SignBuddyProto.SBPMessage.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }

      public PayloadCase
          getPayloadCase() {
        return instance.getPayloadCase();
      }

      public Builder clearPayload() {
        copyOnWrite();
        instance.clearPayload();
        return this;
      }


      /**
       * <code>required uint32 id = 1;</code>
       */
      public boolean hasId() {
        return instance.hasId();
      }
      /**
       * <code>required uint32 id = 1;</code>
       */
      public int getId() {
        return instance.getId();
      }
      /**
       * <code>required uint32 id = 1;</code>
       */
      public Builder setId(int value) {
        copyOnWrite();
        instance.setId(value);
        return this;
      }
      /**
       * <code>required uint32 id = 1;</code>
       */
      public Builder clearId() {
        copyOnWrite();
        instance.clearId();
        return this;
      }

      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public boolean hasSample() {
        return instance.hasSample();
      }
      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPSample getSample() {
        return instance.getSample();
      }
      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public Builder setSample(com.example.signbuddy.SignBuddyProto.SBPSample value) {
        copyOnWrite();
        instance.setSample(value);
        return this;
      }
      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public Builder setSample(
          com.example.signbuddy.SignBuddyProto.SBPSample.Builder builderForValue) {
        copyOnWrite();
        instance.setSample(builderForValue);
        return this;
      }
      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public Builder mergeSample(com.example.signbuddy.SignBuddyProto.SBPSample value) {
        copyOnWrite();
        instance.mergeSample(value);
        return this;
      }
      /**
       * <code>optional .SBPSample sample = 2;</code>
       */
      public Builder clearSample() {
        copyOnWrite();
        instance.clearSample();
        return this;
      }

      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public boolean hasStatus() {
        return instance.hasStatus();
      }
      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPStatus getStatus() {
        return instance.getStatus();
      }
      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public Builder setStatus(com.example.signbuddy.SignBuddyProto.SBPStatus value) {
        copyOnWrite();
        instance.setStatus(value);
        return this;
      }
      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public Builder setStatus(
          com.example.signbuddy.SignBuddyProto.SBPStatus.Builder builderForValue) {
        copyOnWrite();
        instance.setStatus(builderForValue);
        return this;
      }
      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public Builder mergeStatus(com.example.signbuddy.SignBuddyProto.SBPStatus value) {
        copyOnWrite();
        instance.mergeStatus(value);
        return this;
      }
      /**
       * <code>optional .SBPStatus status = 3;</code>
       */
      public Builder clearStatus() {
        copyOnWrite();
        instance.clearStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SBPMessage)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.example.signbuddy.SignBuddyProto.SBPMessage();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (hasSample()) {
            if (!getSample().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (hasStatus()) {
            if (!getStatus().isInitialized()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.example.signbuddy.SignBuddyProto.SBPMessage other = (com.example.signbuddy.SignBuddyProto.SBPMessage) arg1;
          id_ = visitor.visitInt(
              hasId(), id_,
              other.hasId(), other.id_);
          switch (other.getPayloadCase()) {
            case SAMPLE: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 2,
                  payload_,
                  other.payload_);
              break;
            }
            case STATUS: {
              payload_ = visitor.visitOneofMessage(
                  payloadCase_ == 3,
                  payload_,
                  other.payload_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              visitor.visitOneofNotSet(payloadCase_ != 0);
              break;
            }
          }
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            if (other.payloadCase_ != 0) {
              payloadCase_ = other.payloadCase_;
            }
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  id_ = input.readUInt32();
                  break;
                }
                case 18: {
                  com.example.signbuddy.SignBuddyProto.SBPSample.Builder subBuilder = null;
                  if (payloadCase_ == 2) {
                    subBuilder = ((com.example.signbuddy.SignBuddyProto.SBPSample) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(com.example.signbuddy.SignBuddyProto.SBPSample.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.example.signbuddy.SignBuddyProto.SBPSample) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 2;
                  break;
                }
                case 26: {
                  com.example.signbuddy.SignBuddyProto.SBPStatus.Builder subBuilder = null;
                  if (payloadCase_ == 3) {
                    subBuilder = ((com.example.signbuddy.SignBuddyProto.SBPStatus) payload_).toBuilder();
                  }
                  payload_ =
                       input.readMessage(com.example.signbuddy.SignBuddyProto.SBPStatus.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom((com.example.signbuddy.SignBuddyProto.SBPStatus) payload_);
                    payload_ = subBuilder.buildPartial();
                  }
                  payloadCase_ = 3;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPMessage.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SBPMessage)
    private static final com.example.signbuddy.SignBuddyProto.SBPMessage DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SBPMessage();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.example.signbuddy.SignBuddyProto.SBPMessage getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SBPMessage> PARSER;

    public static com.google.protobuf.Parser<SBPMessage> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SBPSampleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SBPSample)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    boolean hasSampleId();
    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    int getSampleId();

    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    boolean hasImuData();
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPSample.IMUData getImuData();

    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    boolean hasFlexData();
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPSample.FlexData getFlexData();

    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    boolean hasTouchData();
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    com.example.signbuddy.SignBuddyProto.SBPSample.TouchData getTouchData();
  }
  /**
   * Protobuf type {@code SBPSample}
   */
  public  static final class SBPSample extends
      com.google.protobuf.GeneratedMessageLite<
          SBPSample, SBPSample.Builder> implements
      // @@protoc_insertion_point(message_implements:SBPSample)
      SBPSampleOrBuilder {
    private SBPSample() {
    }
    public interface IMUDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:SBPSample.IMUData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      boolean hasEulH();
      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      int getEulH();

      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      boolean hasEulR();
      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      int getEulR();

      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      boolean hasEulP();
      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      int getEulP();

      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      boolean hasLinAccX();
      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      int getLinAccX();

      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      boolean hasLinAccY();
      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      int getLinAccY();

      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      boolean hasLinAccZ();
      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      int getLinAccZ();
    }
    /**
     * Protobuf type {@code SBPSample.IMUData}
     */
    public  static final class IMUData extends
        com.google.protobuf.GeneratedMessageLite<
            IMUData, IMUData.Builder> implements
        // @@protoc_insertion_point(message_implements:SBPSample.IMUData)
        IMUDataOrBuilder {
      private IMUData() {
      }
      private int bitField0_;
      public static final int EUL_H_FIELD_NUMBER = 1;
      private int eulH_;
      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      public boolean hasEulH() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      public int getEulH() {
        return eulH_;
      }
      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      private void setEulH(int value) {
        bitField0_ |= 0x00000001;
        eulH_ = value;
      }
      /**
       * <code>required sint32 eul_h = 1;</code>
       */
      private void clearEulH() {
        bitField0_ = (bitField0_ & ~0x00000001);
        eulH_ = 0;
      }

      public static final int EUL_R_FIELD_NUMBER = 2;
      private int eulR_;
      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      public boolean hasEulR() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      public int getEulR() {
        return eulR_;
      }
      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      private void setEulR(int value) {
        bitField0_ |= 0x00000002;
        eulR_ = value;
      }
      /**
       * <code>required sint32 eul_r = 2;</code>
       */
      private void clearEulR() {
        bitField0_ = (bitField0_ & ~0x00000002);
        eulR_ = 0;
      }

      public static final int EUL_P_FIELD_NUMBER = 3;
      private int eulP_;
      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      public boolean hasEulP() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      public int getEulP() {
        return eulP_;
      }
      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      private void setEulP(int value) {
        bitField0_ |= 0x00000004;
        eulP_ = value;
      }
      /**
       * <code>required sint32 eul_p = 3;</code>
       */
      private void clearEulP() {
        bitField0_ = (bitField0_ & ~0x00000004);
        eulP_ = 0;
      }

      public static final int LIN_ACC_X_FIELD_NUMBER = 4;
      private int linAccX_;
      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      public boolean hasLinAccX() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      public int getLinAccX() {
        return linAccX_;
      }
      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      private void setLinAccX(int value) {
        bitField0_ |= 0x00000008;
        linAccX_ = value;
      }
      /**
       * <code>required sint32 lin_acc_x = 4;</code>
       */
      private void clearLinAccX() {
        bitField0_ = (bitField0_ & ~0x00000008);
        linAccX_ = 0;
      }

      public static final int LIN_ACC_Y_FIELD_NUMBER = 5;
      private int linAccY_;
      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      public boolean hasLinAccY() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      public int getLinAccY() {
        return linAccY_;
      }
      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      private void setLinAccY(int value) {
        bitField0_ |= 0x00000010;
        linAccY_ = value;
      }
      /**
       * <code>required sint32 lin_acc_y = 5;</code>
       */
      private void clearLinAccY() {
        bitField0_ = (bitField0_ & ~0x00000010);
        linAccY_ = 0;
      }

      public static final int LIN_ACC_Z_FIELD_NUMBER = 6;
      private int linAccZ_;
      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      public boolean hasLinAccZ() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      public int getLinAccZ() {
        return linAccZ_;
      }
      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      private void setLinAccZ(int value) {
        bitField0_ |= 0x00000020;
        linAccZ_ = value;
      }
      /**
       * <code>required sint32 lin_acc_z = 6;</code>
       */
      private void clearLinAccZ() {
        bitField0_ = (bitField0_ & ~0x00000020);
        linAccZ_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeSInt32(1, eulH_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeSInt32(2, eulR_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeSInt32(3, eulP_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeSInt32(4, linAccX_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeSInt32(5, linAccY_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeSInt32(6, linAccZ_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(1, eulH_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(2, eulR_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(3, eulP_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(4, linAccX_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(5, linAccY_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeSInt32Size(6, linAccZ_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code SBPSample.IMUData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.example.signbuddy.SignBuddyProto.SBPSample.IMUData, Builder> implements
          // @@protoc_insertion_point(builder_implements:SBPSample.IMUData)
          com.example.signbuddy.SignBuddyProto.SBPSample.IMUDataOrBuilder {
        // Construct using com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required sint32 eul_h = 1;</code>
         */
        public boolean hasEulH() {
          return instance.hasEulH();
        }
        /**
         * <code>required sint32 eul_h = 1;</code>
         */
        public int getEulH() {
          return instance.getEulH();
        }
        /**
         * <code>required sint32 eul_h = 1;</code>
         */
        public Builder setEulH(int value) {
          copyOnWrite();
          instance.setEulH(value);
          return this;
        }
        /**
         * <code>required sint32 eul_h = 1;</code>
         */
        public Builder clearEulH() {
          copyOnWrite();
          instance.clearEulH();
          return this;
        }

        /**
         * <code>required sint32 eul_r = 2;</code>
         */
        public boolean hasEulR() {
          return instance.hasEulR();
        }
        /**
         * <code>required sint32 eul_r = 2;</code>
         */
        public int getEulR() {
          return instance.getEulR();
        }
        /**
         * <code>required sint32 eul_r = 2;</code>
         */
        public Builder setEulR(int value) {
          copyOnWrite();
          instance.setEulR(value);
          return this;
        }
        /**
         * <code>required sint32 eul_r = 2;</code>
         */
        public Builder clearEulR() {
          copyOnWrite();
          instance.clearEulR();
          return this;
        }

        /**
         * <code>required sint32 eul_p = 3;</code>
         */
        public boolean hasEulP() {
          return instance.hasEulP();
        }
        /**
         * <code>required sint32 eul_p = 3;</code>
         */
        public int getEulP() {
          return instance.getEulP();
        }
        /**
         * <code>required sint32 eul_p = 3;</code>
         */
        public Builder setEulP(int value) {
          copyOnWrite();
          instance.setEulP(value);
          return this;
        }
        /**
         * <code>required sint32 eul_p = 3;</code>
         */
        public Builder clearEulP() {
          copyOnWrite();
          instance.clearEulP();
          return this;
        }

        /**
         * <code>required sint32 lin_acc_x = 4;</code>
         */
        public boolean hasLinAccX() {
          return instance.hasLinAccX();
        }
        /**
         * <code>required sint32 lin_acc_x = 4;</code>
         */
        public int getLinAccX() {
          return instance.getLinAccX();
        }
        /**
         * <code>required sint32 lin_acc_x = 4;</code>
         */
        public Builder setLinAccX(int value) {
          copyOnWrite();
          instance.setLinAccX(value);
          return this;
        }
        /**
         * <code>required sint32 lin_acc_x = 4;</code>
         */
        public Builder clearLinAccX() {
          copyOnWrite();
          instance.clearLinAccX();
          return this;
        }

        /**
         * <code>required sint32 lin_acc_y = 5;</code>
         */
        public boolean hasLinAccY() {
          return instance.hasLinAccY();
        }
        /**
         * <code>required sint32 lin_acc_y = 5;</code>
         */
        public int getLinAccY() {
          return instance.getLinAccY();
        }
        /**
         * <code>required sint32 lin_acc_y = 5;</code>
         */
        public Builder setLinAccY(int value) {
          copyOnWrite();
          instance.setLinAccY(value);
          return this;
        }
        /**
         * <code>required sint32 lin_acc_y = 5;</code>
         */
        public Builder clearLinAccY() {
          copyOnWrite();
          instance.clearLinAccY();
          return this;
        }

        /**
         * <code>required sint32 lin_acc_z = 6;</code>
         */
        public boolean hasLinAccZ() {
          return instance.hasLinAccZ();
        }
        /**
         * <code>required sint32 lin_acc_z = 6;</code>
         */
        public int getLinAccZ() {
          return instance.getLinAccZ();
        }
        /**
         * <code>required sint32 lin_acc_z = 6;</code>
         */
        public Builder setLinAccZ(int value) {
          copyOnWrite();
          instance.setLinAccZ(value);
          return this;
        }
        /**
         * <code>required sint32 lin_acc_z = 6;</code>
         */
        public Builder clearLinAccZ() {
          copyOnWrite();
          instance.clearLinAccZ();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SBPSample.IMUData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.example.signbuddy.SignBuddyProto.SBPSample.IMUData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasEulH()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasEulR()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasEulP()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasLinAccX()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasLinAccY()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasLinAccZ()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.example.signbuddy.SignBuddyProto.SBPSample.IMUData other = (com.example.signbuddy.SignBuddyProto.SBPSample.IMUData) arg1;
            eulH_ = visitor.visitInt(
                hasEulH(), eulH_,
                other.hasEulH(), other.eulH_);
            eulR_ = visitor.visitInt(
                hasEulR(), eulR_,
                other.hasEulR(), other.eulR_);
            eulP_ = visitor.visitInt(
                hasEulP(), eulP_,
                other.hasEulP(), other.eulP_);
            linAccX_ = visitor.visitInt(
                hasLinAccX(), linAccX_,
                other.hasLinAccX(), other.linAccX_);
            linAccY_ = visitor.visitInt(
                hasLinAccY(), linAccY_,
                other.hasLinAccY(), other.linAccY_);
            linAccZ_ = visitor.visitInt(
                hasLinAccZ(), linAccZ_,
                other.hasLinAccZ(), other.linAccZ_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    eulH_ = input.readSInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    eulR_ = input.readSInt32();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    eulP_ = input.readSInt32();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    linAccX_ = input.readSInt32();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    linAccY_ = input.readSInt32();
                    break;
                  }
                  case 48: {
                    bitField0_ |= 0x00000020;
                    linAccZ_ = input.readSInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:SBPSample.IMUData)
      private static final com.example.signbuddy.SignBuddyProto.SBPSample.IMUData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new IMUData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.IMUData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<IMUData> PARSER;

      public static com.google.protobuf.Parser<IMUData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface FlexDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:SBPSample.FlexData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      boolean hasFlexThumb();
      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      int getFlexThumb();

      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      boolean hasFlexIndex();
      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      int getFlexIndex();

      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      boolean hasFlexMiddle();
      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      int getFlexMiddle();

      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      boolean hasFlexRing();
      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      int getFlexRing();

      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      boolean hasFlexLittle();
      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      int getFlexLittle();
    }
    /**
     * Protobuf type {@code SBPSample.FlexData}
     */
    public  static final class FlexData extends
        com.google.protobuf.GeneratedMessageLite<
            FlexData, FlexData.Builder> implements
        // @@protoc_insertion_point(message_implements:SBPSample.FlexData)
        FlexDataOrBuilder {
      private FlexData() {
      }
      private int bitField0_;
      public static final int FLEX_THUMB_FIELD_NUMBER = 1;
      private int flexThumb_;
      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      public boolean hasFlexThumb() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      public int getFlexThumb() {
        return flexThumb_;
      }
      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      private void setFlexThumb(int value) {
        bitField0_ |= 0x00000001;
        flexThumb_ = value;
      }
      /**
       * <code>required uint32 flex_thumb = 1;</code>
       */
      private void clearFlexThumb() {
        bitField0_ = (bitField0_ & ~0x00000001);
        flexThumb_ = 0;
      }

      public static final int FLEX_INDEX_FIELD_NUMBER = 2;
      private int flexIndex_;
      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      public boolean hasFlexIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      public int getFlexIndex() {
        return flexIndex_;
      }
      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      private void setFlexIndex(int value) {
        bitField0_ |= 0x00000002;
        flexIndex_ = value;
      }
      /**
       * <code>required uint32 flex_index = 2;</code>
       */
      private void clearFlexIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        flexIndex_ = 0;
      }

      public static final int FLEX_MIDDLE_FIELD_NUMBER = 3;
      private int flexMiddle_;
      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      public boolean hasFlexMiddle() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      public int getFlexMiddle() {
        return flexMiddle_;
      }
      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      private void setFlexMiddle(int value) {
        bitField0_ |= 0x00000004;
        flexMiddle_ = value;
      }
      /**
       * <code>required uint32 flex_middle = 3;</code>
       */
      private void clearFlexMiddle() {
        bitField0_ = (bitField0_ & ~0x00000004);
        flexMiddle_ = 0;
      }

      public static final int FLEX_RING_FIELD_NUMBER = 4;
      private int flexRing_;
      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      public boolean hasFlexRing() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      public int getFlexRing() {
        return flexRing_;
      }
      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      private void setFlexRing(int value) {
        bitField0_ |= 0x00000008;
        flexRing_ = value;
      }
      /**
       * <code>required uint32 flex_ring = 4;</code>
       */
      private void clearFlexRing() {
        bitField0_ = (bitField0_ & ~0x00000008);
        flexRing_ = 0;
      }

      public static final int FLEX_LITTLE_FIELD_NUMBER = 5;
      private int flexLittle_;
      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      public boolean hasFlexLittle() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      public int getFlexLittle() {
        return flexLittle_;
      }
      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      private void setFlexLittle(int value) {
        bitField0_ |= 0x00000010;
        flexLittle_ = value;
      }
      /**
       * <code>required uint32 flex_little = 5;</code>
       */
      private void clearFlexLittle() {
        bitField0_ = (bitField0_ & ~0x00000010);
        flexLittle_ = 0;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, flexThumb_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, flexIndex_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, flexMiddle_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeUInt32(4, flexRing_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, flexLittle_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, flexThumb_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, flexIndex_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, flexMiddle_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(4, flexRing_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, flexLittle_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code SBPSample.FlexData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.example.signbuddy.SignBuddyProto.SBPSample.FlexData, Builder> implements
          // @@protoc_insertion_point(builder_implements:SBPSample.FlexData)
          com.example.signbuddy.SignBuddyProto.SBPSample.FlexDataOrBuilder {
        // Construct using com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required uint32 flex_thumb = 1;</code>
         */
        public boolean hasFlexThumb() {
          return instance.hasFlexThumb();
        }
        /**
         * <code>required uint32 flex_thumb = 1;</code>
         */
        public int getFlexThumb() {
          return instance.getFlexThumb();
        }
        /**
         * <code>required uint32 flex_thumb = 1;</code>
         */
        public Builder setFlexThumb(int value) {
          copyOnWrite();
          instance.setFlexThumb(value);
          return this;
        }
        /**
         * <code>required uint32 flex_thumb = 1;</code>
         */
        public Builder clearFlexThumb() {
          copyOnWrite();
          instance.clearFlexThumb();
          return this;
        }

        /**
         * <code>required uint32 flex_index = 2;</code>
         */
        public boolean hasFlexIndex() {
          return instance.hasFlexIndex();
        }
        /**
         * <code>required uint32 flex_index = 2;</code>
         */
        public int getFlexIndex() {
          return instance.getFlexIndex();
        }
        /**
         * <code>required uint32 flex_index = 2;</code>
         */
        public Builder setFlexIndex(int value) {
          copyOnWrite();
          instance.setFlexIndex(value);
          return this;
        }
        /**
         * <code>required uint32 flex_index = 2;</code>
         */
        public Builder clearFlexIndex() {
          copyOnWrite();
          instance.clearFlexIndex();
          return this;
        }

        /**
         * <code>required uint32 flex_middle = 3;</code>
         */
        public boolean hasFlexMiddle() {
          return instance.hasFlexMiddle();
        }
        /**
         * <code>required uint32 flex_middle = 3;</code>
         */
        public int getFlexMiddle() {
          return instance.getFlexMiddle();
        }
        /**
         * <code>required uint32 flex_middle = 3;</code>
         */
        public Builder setFlexMiddle(int value) {
          copyOnWrite();
          instance.setFlexMiddle(value);
          return this;
        }
        /**
         * <code>required uint32 flex_middle = 3;</code>
         */
        public Builder clearFlexMiddle() {
          copyOnWrite();
          instance.clearFlexMiddle();
          return this;
        }

        /**
         * <code>required uint32 flex_ring = 4;</code>
         */
        public boolean hasFlexRing() {
          return instance.hasFlexRing();
        }
        /**
         * <code>required uint32 flex_ring = 4;</code>
         */
        public int getFlexRing() {
          return instance.getFlexRing();
        }
        /**
         * <code>required uint32 flex_ring = 4;</code>
         */
        public Builder setFlexRing(int value) {
          copyOnWrite();
          instance.setFlexRing(value);
          return this;
        }
        /**
         * <code>required uint32 flex_ring = 4;</code>
         */
        public Builder clearFlexRing() {
          copyOnWrite();
          instance.clearFlexRing();
          return this;
        }

        /**
         * <code>required uint32 flex_little = 5;</code>
         */
        public boolean hasFlexLittle() {
          return instance.hasFlexLittle();
        }
        /**
         * <code>required uint32 flex_little = 5;</code>
         */
        public int getFlexLittle() {
          return instance.getFlexLittle();
        }
        /**
         * <code>required uint32 flex_little = 5;</code>
         */
        public Builder setFlexLittle(int value) {
          copyOnWrite();
          instance.setFlexLittle(value);
          return this;
        }
        /**
         * <code>required uint32 flex_little = 5;</code>
         */
        public Builder clearFlexLittle() {
          copyOnWrite();
          instance.clearFlexLittle();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SBPSample.FlexData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.example.signbuddy.SignBuddyProto.SBPSample.FlexData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasFlexThumb()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasFlexIndex()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasFlexMiddle()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasFlexRing()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasFlexLittle()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.example.signbuddy.SignBuddyProto.SBPSample.FlexData other = (com.example.signbuddy.SignBuddyProto.SBPSample.FlexData) arg1;
            flexThumb_ = visitor.visitInt(
                hasFlexThumb(), flexThumb_,
                other.hasFlexThumb(), other.flexThumb_);
            flexIndex_ = visitor.visitInt(
                hasFlexIndex(), flexIndex_,
                other.hasFlexIndex(), other.flexIndex_);
            flexMiddle_ = visitor.visitInt(
                hasFlexMiddle(), flexMiddle_,
                other.hasFlexMiddle(), other.flexMiddle_);
            flexRing_ = visitor.visitInt(
                hasFlexRing(), flexRing_,
                other.hasFlexRing(), other.flexRing_);
            flexLittle_ = visitor.visitInt(
                hasFlexLittle(), flexLittle_,
                other.hasFlexLittle(), other.flexLittle_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    flexThumb_ = input.readUInt32();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    flexIndex_ = input.readUInt32();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    flexMiddle_ = input.readUInt32();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    flexRing_ = input.readUInt32();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    flexLittle_ = input.readUInt32();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:SBPSample.FlexData)
      private static final com.example.signbuddy.SignBuddyProto.SBPSample.FlexData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new FlexData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.FlexData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<FlexData> PARSER;

      public static com.google.protobuf.Parser<FlexData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    public interface TouchDataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:SBPSample.TouchData)
        com.google.protobuf.MessageLiteOrBuilder {

      /**
       * <code>required bool touch_1 = 1;</code>
       */
      boolean hasTouch1();
      /**
       * <code>required bool touch_1 = 1;</code>
       */
      boolean getTouch1();

      /**
       * <code>required bool touch_2 = 2;</code>
       */
      boolean hasTouch2();
      /**
       * <code>required bool touch_2 = 2;</code>
       */
      boolean getTouch2();

      /**
       * <code>required bool touch_3 = 3;</code>
       */
      boolean hasTouch3();
      /**
       * <code>required bool touch_3 = 3;</code>
       */
      boolean getTouch3();

      /**
       * <code>required bool touch_4 = 4;</code>
       */
      boolean hasTouch4();
      /**
       * <code>required bool touch_4 = 4;</code>
       */
      boolean getTouch4();

      /**
       * <code>required bool touch_5 = 5;</code>
       */
      boolean hasTouch5();
      /**
       * <code>required bool touch_5 = 5;</code>
       */
      boolean getTouch5();

      /**
       * <code>required bool touch_6 = 6;</code>
       */
      boolean hasTouch6();
      /**
       * <code>required bool touch_6 = 6;</code>
       */
      boolean getTouch6();

      /**
       * <code>required bool touch_7 = 7;</code>
       */
      boolean hasTouch7();
      /**
       * <code>required bool touch_7 = 7;</code>
       */
      boolean getTouch7();

      /**
       * <code>required bool touch_8 = 8;</code>
       */
      boolean hasTouch8();
      /**
       * <code>required bool touch_8 = 8;</code>
       */
      boolean getTouch8();

      /**
       * <code>required bool touch_9 = 9;</code>
       */
      boolean hasTouch9();
      /**
       * <code>required bool touch_9 = 9;</code>
       */
      boolean getTouch9();

      /**
       * <code>required bool touch_10 = 10;</code>
       */
      boolean hasTouch10();
      /**
       * <code>required bool touch_10 = 10;</code>
       */
      boolean getTouch10();

      /**
       * <code>required bool touch_11 = 11;</code>
       */
      boolean hasTouch11();
      /**
       * <code>required bool touch_11 = 11;</code>
       */
      boolean getTouch11();

      /**
       * <code>required bool touch_12 = 12;</code>
       */
      boolean hasTouch12();
      /**
       * <code>required bool touch_12 = 12;</code>
       */
      boolean getTouch12();
    }
    /**
     * Protobuf type {@code SBPSample.TouchData}
     */
    public  static final class TouchData extends
        com.google.protobuf.GeneratedMessageLite<
            TouchData, TouchData.Builder> implements
        // @@protoc_insertion_point(message_implements:SBPSample.TouchData)
        TouchDataOrBuilder {
      private TouchData() {
      }
      private int bitField0_;
      public static final int TOUCH_1_FIELD_NUMBER = 1;
      private boolean touch1_;
      /**
       * <code>required bool touch_1 = 1;</code>
       */
      public boolean hasTouch1() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool touch_1 = 1;</code>
       */
      public boolean getTouch1() {
        return touch1_;
      }
      /**
       * <code>required bool touch_1 = 1;</code>
       */
      private void setTouch1(boolean value) {
        bitField0_ |= 0x00000001;
        touch1_ = value;
      }
      /**
       * <code>required bool touch_1 = 1;</code>
       */
      private void clearTouch1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        touch1_ = false;
      }

      public static final int TOUCH_2_FIELD_NUMBER = 2;
      private boolean touch2_;
      /**
       * <code>required bool touch_2 = 2;</code>
       */
      public boolean hasTouch2() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required bool touch_2 = 2;</code>
       */
      public boolean getTouch2() {
        return touch2_;
      }
      /**
       * <code>required bool touch_2 = 2;</code>
       */
      private void setTouch2(boolean value) {
        bitField0_ |= 0x00000002;
        touch2_ = value;
      }
      /**
       * <code>required bool touch_2 = 2;</code>
       */
      private void clearTouch2() {
        bitField0_ = (bitField0_ & ~0x00000002);
        touch2_ = false;
      }

      public static final int TOUCH_3_FIELD_NUMBER = 3;
      private boolean touch3_;
      /**
       * <code>required bool touch_3 = 3;</code>
       */
      public boolean hasTouch3() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required bool touch_3 = 3;</code>
       */
      public boolean getTouch3() {
        return touch3_;
      }
      /**
       * <code>required bool touch_3 = 3;</code>
       */
      private void setTouch3(boolean value) {
        bitField0_ |= 0x00000004;
        touch3_ = value;
      }
      /**
       * <code>required bool touch_3 = 3;</code>
       */
      private void clearTouch3() {
        bitField0_ = (bitField0_ & ~0x00000004);
        touch3_ = false;
      }

      public static final int TOUCH_4_FIELD_NUMBER = 4;
      private boolean touch4_;
      /**
       * <code>required bool touch_4 = 4;</code>
       */
      public boolean hasTouch4() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required bool touch_4 = 4;</code>
       */
      public boolean getTouch4() {
        return touch4_;
      }
      /**
       * <code>required bool touch_4 = 4;</code>
       */
      private void setTouch4(boolean value) {
        bitField0_ |= 0x00000008;
        touch4_ = value;
      }
      /**
       * <code>required bool touch_4 = 4;</code>
       */
      private void clearTouch4() {
        bitField0_ = (bitField0_ & ~0x00000008);
        touch4_ = false;
      }

      public static final int TOUCH_5_FIELD_NUMBER = 5;
      private boolean touch5_;
      /**
       * <code>required bool touch_5 = 5;</code>
       */
      public boolean hasTouch5() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required bool touch_5 = 5;</code>
       */
      public boolean getTouch5() {
        return touch5_;
      }
      /**
       * <code>required bool touch_5 = 5;</code>
       */
      private void setTouch5(boolean value) {
        bitField0_ |= 0x00000010;
        touch5_ = value;
      }
      /**
       * <code>required bool touch_5 = 5;</code>
       */
      private void clearTouch5() {
        bitField0_ = (bitField0_ & ~0x00000010);
        touch5_ = false;
      }

      public static final int TOUCH_6_FIELD_NUMBER = 6;
      private boolean touch6_;
      /**
       * <code>required bool touch_6 = 6;</code>
       */
      public boolean hasTouch6() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required bool touch_6 = 6;</code>
       */
      public boolean getTouch6() {
        return touch6_;
      }
      /**
       * <code>required bool touch_6 = 6;</code>
       */
      private void setTouch6(boolean value) {
        bitField0_ |= 0x00000020;
        touch6_ = value;
      }
      /**
       * <code>required bool touch_6 = 6;</code>
       */
      private void clearTouch6() {
        bitField0_ = (bitField0_ & ~0x00000020);
        touch6_ = false;
      }

      public static final int TOUCH_7_FIELD_NUMBER = 7;
      private boolean touch7_;
      /**
       * <code>required bool touch_7 = 7;</code>
       */
      public boolean hasTouch7() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required bool touch_7 = 7;</code>
       */
      public boolean getTouch7() {
        return touch7_;
      }
      /**
       * <code>required bool touch_7 = 7;</code>
       */
      private void setTouch7(boolean value) {
        bitField0_ |= 0x00000040;
        touch7_ = value;
      }
      /**
       * <code>required bool touch_7 = 7;</code>
       */
      private void clearTouch7() {
        bitField0_ = (bitField0_ & ~0x00000040);
        touch7_ = false;
      }

      public static final int TOUCH_8_FIELD_NUMBER = 8;
      private boolean touch8_;
      /**
       * <code>required bool touch_8 = 8;</code>
       */
      public boolean hasTouch8() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required bool touch_8 = 8;</code>
       */
      public boolean getTouch8() {
        return touch8_;
      }
      /**
       * <code>required bool touch_8 = 8;</code>
       */
      private void setTouch8(boolean value) {
        bitField0_ |= 0x00000080;
        touch8_ = value;
      }
      /**
       * <code>required bool touch_8 = 8;</code>
       */
      private void clearTouch8() {
        bitField0_ = (bitField0_ & ~0x00000080);
        touch8_ = false;
      }

      public static final int TOUCH_9_FIELD_NUMBER = 9;
      private boolean touch9_;
      /**
       * <code>required bool touch_9 = 9;</code>
       */
      public boolean hasTouch9() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required bool touch_9 = 9;</code>
       */
      public boolean getTouch9() {
        return touch9_;
      }
      /**
       * <code>required bool touch_9 = 9;</code>
       */
      private void setTouch9(boolean value) {
        bitField0_ |= 0x00000100;
        touch9_ = value;
      }
      /**
       * <code>required bool touch_9 = 9;</code>
       */
      private void clearTouch9() {
        bitField0_ = (bitField0_ & ~0x00000100);
        touch9_ = false;
      }

      public static final int TOUCH_10_FIELD_NUMBER = 10;
      private boolean touch10_;
      /**
       * <code>required bool touch_10 = 10;</code>
       */
      public boolean hasTouch10() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>required bool touch_10 = 10;</code>
       */
      public boolean getTouch10() {
        return touch10_;
      }
      /**
       * <code>required bool touch_10 = 10;</code>
       */
      private void setTouch10(boolean value) {
        bitField0_ |= 0x00000200;
        touch10_ = value;
      }
      /**
       * <code>required bool touch_10 = 10;</code>
       */
      private void clearTouch10() {
        bitField0_ = (bitField0_ & ~0x00000200);
        touch10_ = false;
      }

      public static final int TOUCH_11_FIELD_NUMBER = 11;
      private boolean touch11_;
      /**
       * <code>required bool touch_11 = 11;</code>
       */
      public boolean hasTouch11() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>required bool touch_11 = 11;</code>
       */
      public boolean getTouch11() {
        return touch11_;
      }
      /**
       * <code>required bool touch_11 = 11;</code>
       */
      private void setTouch11(boolean value) {
        bitField0_ |= 0x00000400;
        touch11_ = value;
      }
      /**
       * <code>required bool touch_11 = 11;</code>
       */
      private void clearTouch11() {
        bitField0_ = (bitField0_ & ~0x00000400);
        touch11_ = false;
      }

      public static final int TOUCH_12_FIELD_NUMBER = 12;
      private boolean touch12_;
      /**
       * <code>required bool touch_12 = 12;</code>
       */
      public boolean hasTouch12() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required bool touch_12 = 12;</code>
       */
      public boolean getTouch12() {
        return touch12_;
      }
      /**
       * <code>required bool touch_12 = 12;</code>
       */
      private void setTouch12(boolean value) {
        bitField0_ |= 0x00000800;
        touch12_ = value;
      }
      /**
       * <code>required bool touch_12 = 12;</code>
       */
      private void clearTouch12() {
        bitField0_ = (bitField0_ & ~0x00000800);
        touch12_ = false;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, touch1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBool(2, touch2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBool(3, touch3_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, touch4_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBool(5, touch5_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeBool(6, touch6_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeBool(7, touch7_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeBool(8, touch8_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeBool(9, touch9_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeBool(10, touch10_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          output.writeBool(11, touch11_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          output.writeBool(12, touch12_);
        }
        unknownFields.writeTo(output);
      }

      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, touch1_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(2, touch2_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(3, touch3_);
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, touch4_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(5, touch5_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(6, touch6_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(7, touch7_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(8, touch8_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(9, touch9_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(10, touch10_);
        }
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(11, touch11_);
        }
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(12, touch12_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, data, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input);
      }
      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageLite.parseFrom(
            DEFAULT_INSTANCE, input, extensionRegistry);
      }

      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }

      /**
       * Protobuf type {@code SBPSample.TouchData}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageLite.Builder<
            com.example.signbuddy.SignBuddyProto.SBPSample.TouchData, Builder> implements
          // @@protoc_insertion_point(builder_implements:SBPSample.TouchData)
          com.example.signbuddy.SignBuddyProto.SBPSample.TouchDataOrBuilder {
        // Construct using com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.newBuilder()
        private Builder() {
          super(DEFAULT_INSTANCE);
        }


        /**
         * <code>required bool touch_1 = 1;</code>
         */
        public boolean hasTouch1() {
          return instance.hasTouch1();
        }
        /**
         * <code>required bool touch_1 = 1;</code>
         */
        public boolean getTouch1() {
          return instance.getTouch1();
        }
        /**
         * <code>required bool touch_1 = 1;</code>
         */
        public Builder setTouch1(boolean value) {
          copyOnWrite();
          instance.setTouch1(value);
          return this;
        }
        /**
         * <code>required bool touch_1 = 1;</code>
         */
        public Builder clearTouch1() {
          copyOnWrite();
          instance.clearTouch1();
          return this;
        }

        /**
         * <code>required bool touch_2 = 2;</code>
         */
        public boolean hasTouch2() {
          return instance.hasTouch2();
        }
        /**
         * <code>required bool touch_2 = 2;</code>
         */
        public boolean getTouch2() {
          return instance.getTouch2();
        }
        /**
         * <code>required bool touch_2 = 2;</code>
         */
        public Builder setTouch2(boolean value) {
          copyOnWrite();
          instance.setTouch2(value);
          return this;
        }
        /**
         * <code>required bool touch_2 = 2;</code>
         */
        public Builder clearTouch2() {
          copyOnWrite();
          instance.clearTouch2();
          return this;
        }

        /**
         * <code>required bool touch_3 = 3;</code>
         */
        public boolean hasTouch3() {
          return instance.hasTouch3();
        }
        /**
         * <code>required bool touch_3 = 3;</code>
         */
        public boolean getTouch3() {
          return instance.getTouch3();
        }
        /**
         * <code>required bool touch_3 = 3;</code>
         */
        public Builder setTouch3(boolean value) {
          copyOnWrite();
          instance.setTouch3(value);
          return this;
        }
        /**
         * <code>required bool touch_3 = 3;</code>
         */
        public Builder clearTouch3() {
          copyOnWrite();
          instance.clearTouch3();
          return this;
        }

        /**
         * <code>required bool touch_4 = 4;</code>
         */
        public boolean hasTouch4() {
          return instance.hasTouch4();
        }
        /**
         * <code>required bool touch_4 = 4;</code>
         */
        public boolean getTouch4() {
          return instance.getTouch4();
        }
        /**
         * <code>required bool touch_4 = 4;</code>
         */
        public Builder setTouch4(boolean value) {
          copyOnWrite();
          instance.setTouch4(value);
          return this;
        }
        /**
         * <code>required bool touch_4 = 4;</code>
         */
        public Builder clearTouch4() {
          copyOnWrite();
          instance.clearTouch4();
          return this;
        }

        /**
         * <code>required bool touch_5 = 5;</code>
         */
        public boolean hasTouch5() {
          return instance.hasTouch5();
        }
        /**
         * <code>required bool touch_5 = 5;</code>
         */
        public boolean getTouch5() {
          return instance.getTouch5();
        }
        /**
         * <code>required bool touch_5 = 5;</code>
         */
        public Builder setTouch5(boolean value) {
          copyOnWrite();
          instance.setTouch5(value);
          return this;
        }
        /**
         * <code>required bool touch_5 = 5;</code>
         */
        public Builder clearTouch5() {
          copyOnWrite();
          instance.clearTouch5();
          return this;
        }

        /**
         * <code>required bool touch_6 = 6;</code>
         */
        public boolean hasTouch6() {
          return instance.hasTouch6();
        }
        /**
         * <code>required bool touch_6 = 6;</code>
         */
        public boolean getTouch6() {
          return instance.getTouch6();
        }
        /**
         * <code>required bool touch_6 = 6;</code>
         */
        public Builder setTouch6(boolean value) {
          copyOnWrite();
          instance.setTouch6(value);
          return this;
        }
        /**
         * <code>required bool touch_6 = 6;</code>
         */
        public Builder clearTouch6() {
          copyOnWrite();
          instance.clearTouch6();
          return this;
        }

        /**
         * <code>required bool touch_7 = 7;</code>
         */
        public boolean hasTouch7() {
          return instance.hasTouch7();
        }
        /**
         * <code>required bool touch_7 = 7;</code>
         */
        public boolean getTouch7() {
          return instance.getTouch7();
        }
        /**
         * <code>required bool touch_7 = 7;</code>
         */
        public Builder setTouch7(boolean value) {
          copyOnWrite();
          instance.setTouch7(value);
          return this;
        }
        /**
         * <code>required bool touch_7 = 7;</code>
         */
        public Builder clearTouch7() {
          copyOnWrite();
          instance.clearTouch7();
          return this;
        }

        /**
         * <code>required bool touch_8 = 8;</code>
         */
        public boolean hasTouch8() {
          return instance.hasTouch8();
        }
        /**
         * <code>required bool touch_8 = 8;</code>
         */
        public boolean getTouch8() {
          return instance.getTouch8();
        }
        /**
         * <code>required bool touch_8 = 8;</code>
         */
        public Builder setTouch8(boolean value) {
          copyOnWrite();
          instance.setTouch8(value);
          return this;
        }
        /**
         * <code>required bool touch_8 = 8;</code>
         */
        public Builder clearTouch8() {
          copyOnWrite();
          instance.clearTouch8();
          return this;
        }

        /**
         * <code>required bool touch_9 = 9;</code>
         */
        public boolean hasTouch9() {
          return instance.hasTouch9();
        }
        /**
         * <code>required bool touch_9 = 9;</code>
         */
        public boolean getTouch9() {
          return instance.getTouch9();
        }
        /**
         * <code>required bool touch_9 = 9;</code>
         */
        public Builder setTouch9(boolean value) {
          copyOnWrite();
          instance.setTouch9(value);
          return this;
        }
        /**
         * <code>required bool touch_9 = 9;</code>
         */
        public Builder clearTouch9() {
          copyOnWrite();
          instance.clearTouch9();
          return this;
        }

        /**
         * <code>required bool touch_10 = 10;</code>
         */
        public boolean hasTouch10() {
          return instance.hasTouch10();
        }
        /**
         * <code>required bool touch_10 = 10;</code>
         */
        public boolean getTouch10() {
          return instance.getTouch10();
        }
        /**
         * <code>required bool touch_10 = 10;</code>
         */
        public Builder setTouch10(boolean value) {
          copyOnWrite();
          instance.setTouch10(value);
          return this;
        }
        /**
         * <code>required bool touch_10 = 10;</code>
         */
        public Builder clearTouch10() {
          copyOnWrite();
          instance.clearTouch10();
          return this;
        }

        /**
         * <code>required bool touch_11 = 11;</code>
         */
        public boolean hasTouch11() {
          return instance.hasTouch11();
        }
        /**
         * <code>required bool touch_11 = 11;</code>
         */
        public boolean getTouch11() {
          return instance.getTouch11();
        }
        /**
         * <code>required bool touch_11 = 11;</code>
         */
        public Builder setTouch11(boolean value) {
          copyOnWrite();
          instance.setTouch11(value);
          return this;
        }
        /**
         * <code>required bool touch_11 = 11;</code>
         */
        public Builder clearTouch11() {
          copyOnWrite();
          instance.clearTouch11();
          return this;
        }

        /**
         * <code>required bool touch_12 = 12;</code>
         */
        public boolean hasTouch12() {
          return instance.hasTouch12();
        }
        /**
         * <code>required bool touch_12 = 12;</code>
         */
        public boolean getTouch12() {
          return instance.getTouch12();
        }
        /**
         * <code>required bool touch_12 = 12;</code>
         */
        public Builder setTouch12(boolean value) {
          copyOnWrite();
          instance.setTouch12(value);
          return this;
        }
        /**
         * <code>required bool touch_12 = 12;</code>
         */
        public Builder clearTouch12() {
          copyOnWrite();
          instance.clearTouch12();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:SBPSample.TouchData)
      }
      private byte memoizedIsInitialized = -1;
      protected final Object dynamicMethod(
          com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
          Object arg0, Object arg1) {
        switch (method) {
          case NEW_MUTABLE_INSTANCE: {
            return new com.example.signbuddy.SignBuddyProto.SBPSample.TouchData();
          }
          case IS_INITIALIZED: {
            byte isInitialized = memoizedIsInitialized;
            if (isInitialized == 1) return DEFAULT_INSTANCE;
            if (isInitialized == 0) return null;

            boolean shouldMemoize = ((Boolean) arg0).booleanValue();
            if (!hasTouch1()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch2()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch3()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch4()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch5()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch6()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch7()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch8()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch9()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch10()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch11()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (!hasTouch12()) {
              if (shouldMemoize) {
                memoizedIsInitialized = 0;
              }
              return null;
            }
            if (shouldMemoize) memoizedIsInitialized = 1;
            return DEFAULT_INSTANCE;

          }
          case MAKE_IMMUTABLE: {
            return null;
          }
          case NEW_BUILDER: {
            return new Builder();
          }
          case VISIT: {
            Visitor visitor = (Visitor) arg0;
            com.example.signbuddy.SignBuddyProto.SBPSample.TouchData other = (com.example.signbuddy.SignBuddyProto.SBPSample.TouchData) arg1;
            touch1_ = visitor.visitBoolean(
                hasTouch1(), touch1_,
                other.hasTouch1(), other.touch1_);
            touch2_ = visitor.visitBoolean(
                hasTouch2(), touch2_,
                other.hasTouch2(), other.touch2_);
            touch3_ = visitor.visitBoolean(
                hasTouch3(), touch3_,
                other.hasTouch3(), other.touch3_);
            touch4_ = visitor.visitBoolean(
                hasTouch4(), touch4_,
                other.hasTouch4(), other.touch4_);
            touch5_ = visitor.visitBoolean(
                hasTouch5(), touch5_,
                other.hasTouch5(), other.touch5_);
            touch6_ = visitor.visitBoolean(
                hasTouch6(), touch6_,
                other.hasTouch6(), other.touch6_);
            touch7_ = visitor.visitBoolean(
                hasTouch7(), touch7_,
                other.hasTouch7(), other.touch7_);
            touch8_ = visitor.visitBoolean(
                hasTouch8(), touch8_,
                other.hasTouch8(), other.touch8_);
            touch9_ = visitor.visitBoolean(
                hasTouch9(), touch9_,
                other.hasTouch9(), other.touch9_);
            touch10_ = visitor.visitBoolean(
                hasTouch10(), touch10_,
                other.hasTouch10(), other.touch10_);
            touch11_ = visitor.visitBoolean(
                hasTouch11(), touch11_,
                other.hasTouch11(), other.touch11_);
            touch12_ = visitor.visitBoolean(
                hasTouch12(), touch12_,
                other.hasTouch12(), other.touch12_);
            if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
                .INSTANCE) {
              bitField0_ |= other.bitField0_;
            }
            return this;
          }
          case MERGE_FROM_STREAM: {
            com.google.protobuf.CodedInputStream input =
                (com.google.protobuf.CodedInputStream) arg0;
            com.google.protobuf.ExtensionRegistryLite extensionRegistry =
                (com.google.protobuf.ExtensionRegistryLite) arg1;
            try {
              boolean done = false;
              while (!done) {
                int tag = input.readTag();
                switch (tag) {
                  case 0:
                    done = true;
                    break;
                  default: {
                    if (!parseUnknownField(tag, input)) {
                      done = true;
                    }
                    break;
                  }
                  case 8: {
                    bitField0_ |= 0x00000001;
                    touch1_ = input.readBool();
                    break;
                  }
                  case 16: {
                    bitField0_ |= 0x00000002;
                    touch2_ = input.readBool();
                    break;
                  }
                  case 24: {
                    bitField0_ |= 0x00000004;
                    touch3_ = input.readBool();
                    break;
                  }
                  case 32: {
                    bitField0_ |= 0x00000008;
                    touch4_ = input.readBool();
                    break;
                  }
                  case 40: {
                    bitField0_ |= 0x00000010;
                    touch5_ = input.readBool();
                    break;
                  }
                  case 48: {
                    bitField0_ |= 0x00000020;
                    touch6_ = input.readBool();
                    break;
                  }
                  case 56: {
                    bitField0_ |= 0x00000040;
                    touch7_ = input.readBool();
                    break;
                  }
                  case 64: {
                    bitField0_ |= 0x00000080;
                    touch8_ = input.readBool();
                    break;
                  }
                  case 72: {
                    bitField0_ |= 0x00000100;
                    touch9_ = input.readBool();
                    break;
                  }
                  case 80: {
                    bitField0_ |= 0x00000200;
                    touch10_ = input.readBool();
                    break;
                  }
                  case 88: {
                    bitField0_ |= 0x00000400;
                    touch11_ = input.readBool();
                    break;
                  }
                  case 96: {
                    bitField0_ |= 0x00000800;
                    touch12_ = input.readBool();
                    break;
                  }
                }
              }
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              throw new RuntimeException(e.setUnfinishedMessage(this));
            } catch (java.io.IOException e) {
              throw new RuntimeException(
                  new com.google.protobuf.InvalidProtocolBufferException(
                      e.getMessage()).setUnfinishedMessage(this));
            } finally {
            }
          }
          case GET_DEFAULT_INSTANCE: {
            return DEFAULT_INSTANCE;
          }
          case GET_PARSER: {
            if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.class) {
                if (PARSER == null) {
                  PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
                }
              }
            }
            return PARSER;
          }
        }
        throw new UnsupportedOperationException();
      }


      // @@protoc_insertion_point(class_scope:SBPSample.TouchData)
      private static final com.example.signbuddy.SignBuddyProto.SBPSample.TouchData DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new TouchData();
        DEFAULT_INSTANCE.makeImmutable();
      }

      public static com.example.signbuddy.SignBuddyProto.SBPSample.TouchData getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static volatile com.google.protobuf.Parser<TouchData> PARSER;

      public static com.google.protobuf.Parser<TouchData> parser() {
        return DEFAULT_INSTANCE.getParserForType();
      }
    }

    private int bitField0_;
    public static final int SAMPLE_ID_FIELD_NUMBER = 1;
    private int sampleId_;
    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    public boolean hasSampleId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    public int getSampleId() {
      return sampleId_;
    }
    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    private void setSampleId(int value) {
      bitField0_ |= 0x00000001;
      sampleId_ = value;
    }
    /**
     * <code>required uint32 sample_id = 1;</code>
     */
    private void clearSampleId() {
      bitField0_ = (bitField0_ & ~0x00000001);
      sampleId_ = 0;
    }

    public static final int IMU_DATA_FIELD_NUMBER = 2;
    private com.example.signbuddy.SignBuddyProto.SBPSample.IMUData imuData_;
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    public boolean hasImuData() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSample.IMUData getImuData() {
      return imuData_ == null ? com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.getDefaultInstance() : imuData_;
    }
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    private void setImuData(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      imuData_ = value;
      bitField0_ |= 0x00000002;
      }
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    private void setImuData(
        com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.Builder builderForValue) {
      imuData_ = builderForValue.build();
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    private void mergeImuData(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData value) {
      if (imuData_ != null &&
          imuData_ != com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.getDefaultInstance()) {
        imuData_ =
          com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.newBuilder(imuData_).mergeFrom(value).buildPartial();
      } else {
        imuData_ = value;
      }
      bitField0_ |= 0x00000002;
    }
    /**
     * <code>required .SBPSample.IMUData imu_data = 2;</code>
     */
    private void clearImuData() {  imuData_ = null;
      bitField0_ = (bitField0_ & ~0x00000002);
    }

    public static final int FLEX_DATA_FIELD_NUMBER = 3;
    private com.example.signbuddy.SignBuddyProto.SBPSample.FlexData flexData_;
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    public boolean hasFlexData() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSample.FlexData getFlexData() {
      return flexData_ == null ? com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.getDefaultInstance() : flexData_;
    }
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    private void setFlexData(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      flexData_ = value;
      bitField0_ |= 0x00000004;
      }
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    private void setFlexData(
        com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.Builder builderForValue) {
      flexData_ = builderForValue.build();
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    private void mergeFlexData(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData value) {
      if (flexData_ != null &&
          flexData_ != com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.getDefaultInstance()) {
        flexData_ =
          com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.newBuilder(flexData_).mergeFrom(value).buildPartial();
      } else {
        flexData_ = value;
      }
      bitField0_ |= 0x00000004;
    }
    /**
     * <code>required .SBPSample.FlexData flex_data = 3;</code>
     */
    private void clearFlexData() {  flexData_ = null;
      bitField0_ = (bitField0_ & ~0x00000004);
    }

    public static final int TOUCH_DATA_FIELD_NUMBER = 4;
    private com.example.signbuddy.SignBuddyProto.SBPSample.TouchData touchData_;
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    public boolean hasTouchData() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    public com.example.signbuddy.SignBuddyProto.SBPSample.TouchData getTouchData() {
      return touchData_ == null ? com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.getDefaultInstance() : touchData_;
    }
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    private void setTouchData(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData value) {
      if (value == null) {
        throw new NullPointerException();
      }
      touchData_ = value;
      bitField0_ |= 0x00000008;
      }
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    private void setTouchData(
        com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.Builder builderForValue) {
      touchData_ = builderForValue.build();
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    private void mergeTouchData(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData value) {
      if (touchData_ != null &&
          touchData_ != com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.getDefaultInstance()) {
        touchData_ =
          com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.newBuilder(touchData_).mergeFrom(value).buildPartial();
      } else {
        touchData_ = value;
      }
      bitField0_ |= 0x00000008;
    }
    /**
     * <code>required .SBPSample.TouchData touch_data = 4;</code>
     */
    private void clearTouchData() {  touchData_ = null;
      bitField0_ = (bitField0_ & ~0x00000008);
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sampleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeMessage(2, getImuData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeMessage(3, getFlexData());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeMessage(4, getTouchData());
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sampleId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getImuData());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFlexData());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getTouchData());
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPSample parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPSample prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code SBPSample}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.example.signbuddy.SignBuddyProto.SBPSample, Builder> implements
        // @@protoc_insertion_point(builder_implements:SBPSample)
        com.example.signbuddy.SignBuddyProto.SBPSampleOrBuilder {
      // Construct using com.example.signbuddy.SignBuddyProto.SBPSample.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 sample_id = 1;</code>
       */
      public boolean hasSampleId() {
        return instance.hasSampleId();
      }
      /**
       * <code>required uint32 sample_id = 1;</code>
       */
      public int getSampleId() {
        return instance.getSampleId();
      }
      /**
       * <code>required uint32 sample_id = 1;</code>
       */
      public Builder setSampleId(int value) {
        copyOnWrite();
        instance.setSampleId(value);
        return this;
      }
      /**
       * <code>required uint32 sample_id = 1;</code>
       */
      public Builder clearSampleId() {
        copyOnWrite();
        instance.clearSampleId();
        return this;
      }

      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public boolean hasImuData() {
        return instance.hasImuData();
      }
      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPSample.IMUData getImuData() {
        return instance.getImuData();
      }
      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public Builder setImuData(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData value) {
        copyOnWrite();
        instance.setImuData(value);
        return this;
        }
      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public Builder setImuData(
          com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.Builder builderForValue) {
        copyOnWrite();
        instance.setImuData(builderForValue);
        return this;
      }
      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public Builder mergeImuData(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData value) {
        copyOnWrite();
        instance.mergeImuData(value);
        return this;
      }
      /**
       * <code>required .SBPSample.IMUData imu_data = 2;</code>
       */
      public Builder clearImuData() {  copyOnWrite();
        instance.clearImuData();
        return this;
      }

      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public boolean hasFlexData() {
        return instance.hasFlexData();
      }
      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPSample.FlexData getFlexData() {
        return instance.getFlexData();
      }
      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public Builder setFlexData(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData value) {
        copyOnWrite();
        instance.setFlexData(value);
        return this;
        }
      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public Builder setFlexData(
          com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.Builder builderForValue) {
        copyOnWrite();
        instance.setFlexData(builderForValue);
        return this;
      }
      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public Builder mergeFlexData(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData value) {
        copyOnWrite();
        instance.mergeFlexData(value);
        return this;
      }
      /**
       * <code>required .SBPSample.FlexData flex_data = 3;</code>
       */
      public Builder clearFlexData() {  copyOnWrite();
        instance.clearFlexData();
        return this;
      }

      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public boolean hasTouchData() {
        return instance.hasTouchData();
      }
      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public com.example.signbuddy.SignBuddyProto.SBPSample.TouchData getTouchData() {
        return instance.getTouchData();
      }
      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public Builder setTouchData(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData value) {
        copyOnWrite();
        instance.setTouchData(value);
        return this;
        }
      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public Builder setTouchData(
          com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.Builder builderForValue) {
        copyOnWrite();
        instance.setTouchData(builderForValue);
        return this;
      }
      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public Builder mergeTouchData(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData value) {
        copyOnWrite();
        instance.mergeTouchData(value);
        return this;
      }
      /**
       * <code>required .SBPSample.TouchData touch_data = 4;</code>
       */
      public Builder clearTouchData() {  copyOnWrite();
        instance.clearTouchData();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SBPSample)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.example.signbuddy.SignBuddyProto.SBPSample();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasSampleId()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasImuData()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasFlexData()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasTouchData()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getImuData().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getFlexData().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!getTouchData().isInitialized()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.example.signbuddy.SignBuddyProto.SBPSample other = (com.example.signbuddy.SignBuddyProto.SBPSample) arg1;
          sampleId_ = visitor.visitInt(
              hasSampleId(), sampleId_,
              other.hasSampleId(), other.sampleId_);
          imuData_ = visitor.visitMessage(imuData_, other.imuData_);
          flexData_ = visitor.visitMessage(flexData_, other.flexData_);
          touchData_ = visitor.visitMessage(touchData_, other.touchData_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  sampleId_ = input.readUInt32();
                  break;
                }
                case 18: {
                  com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000002) == 0x00000002)) {
                    subBuilder = imuData_.toBuilder();
                  }
                  imuData_ = input.readMessage(com.example.signbuddy.SignBuddyProto.SBPSample.IMUData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(imuData_);
                    imuData_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000002;
                  break;
                }
                case 26: {
                  com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000004) == 0x00000004)) {
                    subBuilder = flexData_.toBuilder();
                  }
                  flexData_ = input.readMessage(com.example.signbuddy.SignBuddyProto.SBPSample.FlexData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(flexData_);
                    flexData_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000004;
                  break;
                }
                case 34: {
                  com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.Builder subBuilder = null;
                  if (((bitField0_ & 0x00000008) == 0x00000008)) {
                    subBuilder = touchData_.toBuilder();
                  }
                  touchData_ = input.readMessage(com.example.signbuddy.SignBuddyProto.SBPSample.TouchData.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(touchData_);
                    touchData_ = subBuilder.buildPartial();
                  }
                  bitField0_ |= 0x00000008;
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPSample.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SBPSample)
    private static final com.example.signbuddy.SignBuddyProto.SBPSample DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SBPSample();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.example.signbuddy.SignBuddyProto.SBPSample getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SBPSample> PARSER;

    public static com.google.protobuf.Parser<SBPSample> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }

  public interface SBPStatusOrBuilder extends
      // @@protoc_insertion_point(interface_extends:SBPStatus)
      com.google.protobuf.MessageLiteOrBuilder {

    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    boolean hasBatteryVoltage();
    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    int getBatteryVoltage();

    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    boolean hasImuSysCalibStatus();
    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    int getImuSysCalibStatus();

    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    boolean hasImuMagCalibStatus();
    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    int getImuMagCalibStatus();

    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    boolean hasImuAccCalibStatus();
    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    int getImuAccCalibStatus();

    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    boolean hasImuGyroCalibStatus();
    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    int getImuGyroCalibStatus();
  }
  /**
   * Protobuf type {@code SBPStatus}
   */
  public  static final class SBPStatus extends
      com.google.protobuf.GeneratedMessageLite<
          SBPStatus, SBPStatus.Builder> implements
      // @@protoc_insertion_point(message_implements:SBPStatus)
      SBPStatusOrBuilder {
    private SBPStatus() {
    }
    private int bitField0_;
    public static final int BATTERY_VOLTAGE_FIELD_NUMBER = 1;
    private int batteryVoltage_;
    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    public boolean hasBatteryVoltage() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    public int getBatteryVoltage() {
      return batteryVoltage_;
    }
    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    private void setBatteryVoltage(int value) {
      bitField0_ |= 0x00000001;
      batteryVoltage_ = value;
    }
    /**
     * <code>required uint32 battery_voltage = 1;</code>
     */
    private void clearBatteryVoltage() {
      bitField0_ = (bitField0_ & ~0x00000001);
      batteryVoltage_ = 0;
    }

    public static final int IMU_SYS_CALIB_STATUS_FIELD_NUMBER = 2;
    private int imuSysCalibStatus_;
    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    public boolean hasImuSysCalibStatus() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    public int getImuSysCalibStatus() {
      return imuSysCalibStatus_;
    }
    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    private void setImuSysCalibStatus(int value) {
      bitField0_ |= 0x00000002;
      imuSysCalibStatus_ = value;
    }
    /**
     * <code>required uint32 imu_sys_calib_status = 2;</code>
     */
    private void clearImuSysCalibStatus() {
      bitField0_ = (bitField0_ & ~0x00000002);
      imuSysCalibStatus_ = 0;
    }

    public static final int IMU_MAG_CALIB_STATUS_FIELD_NUMBER = 3;
    private int imuMagCalibStatus_;
    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    public boolean hasImuMagCalibStatus() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    public int getImuMagCalibStatus() {
      return imuMagCalibStatus_;
    }
    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    private void setImuMagCalibStatus(int value) {
      bitField0_ |= 0x00000004;
      imuMagCalibStatus_ = value;
    }
    /**
     * <code>required uint32 imu_mag_calib_status = 3;</code>
     */
    private void clearImuMagCalibStatus() {
      bitField0_ = (bitField0_ & ~0x00000004);
      imuMagCalibStatus_ = 0;
    }

    public static final int IMU_ACC_CALIB_STATUS_FIELD_NUMBER = 4;
    private int imuAccCalibStatus_;
    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    public boolean hasImuAccCalibStatus() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    public int getImuAccCalibStatus() {
      return imuAccCalibStatus_;
    }
    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    private void setImuAccCalibStatus(int value) {
      bitField0_ |= 0x00000008;
      imuAccCalibStatus_ = value;
    }
    /**
     * <code>required uint32 imu_acc_calib_status = 4;</code>
     */
    private void clearImuAccCalibStatus() {
      bitField0_ = (bitField0_ & ~0x00000008);
      imuAccCalibStatus_ = 0;
    }

    public static final int IMU_GYRO_CALIB_STATUS_FIELD_NUMBER = 5;
    private int imuGyroCalibStatus_;
    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    public boolean hasImuGyroCalibStatus() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    public int getImuGyroCalibStatus() {
      return imuGyroCalibStatus_;
    }
    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    private void setImuGyroCalibStatus(int value) {
      bitField0_ |= 0x00000010;
      imuGyroCalibStatus_ = value;
    }
    /**
     * <code>required uint32 imu_gyro_calib_status = 5;</code>
     */
    private void clearImuGyroCalibStatus() {
      bitField0_ = (bitField0_ & ~0x00000010);
      imuGyroCalibStatus_ = 0;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, batteryVoltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, imuSysCalibStatus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, imuMagCalibStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, imuAccCalibStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(5, imuGyroCalibStatus_);
      }
      unknownFields.writeTo(output);
    }

    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, batteryVoltage_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, imuSysCalibStatus_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, imuMagCalibStatus_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, imuAccCalibStatus_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, imuGyroCalibStatus_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, data, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return parseDelimitedFrom(DEFAULT_INSTANCE, input, extensionRegistry);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input);
    }
    public static com.example.signbuddy.SignBuddyProto.SBPStatus parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageLite.parseFrom(
          DEFAULT_INSTANCE, input, extensionRegistry);
    }

    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.example.signbuddy.SignBuddyProto.SBPStatus prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }

    /**
     * Protobuf type {@code SBPStatus}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageLite.Builder<
          com.example.signbuddy.SignBuddyProto.SBPStatus, Builder> implements
        // @@protoc_insertion_point(builder_implements:SBPStatus)
        com.example.signbuddy.SignBuddyProto.SBPStatusOrBuilder {
      // Construct using com.example.signbuddy.SignBuddyProto.SBPStatus.newBuilder()
      private Builder() {
        super(DEFAULT_INSTANCE);
      }


      /**
       * <code>required uint32 battery_voltage = 1;</code>
       */
      public boolean hasBatteryVoltage() {
        return instance.hasBatteryVoltage();
      }
      /**
       * <code>required uint32 battery_voltage = 1;</code>
       */
      public int getBatteryVoltage() {
        return instance.getBatteryVoltage();
      }
      /**
       * <code>required uint32 battery_voltage = 1;</code>
       */
      public Builder setBatteryVoltage(int value) {
        copyOnWrite();
        instance.setBatteryVoltage(value);
        return this;
      }
      /**
       * <code>required uint32 battery_voltage = 1;</code>
       */
      public Builder clearBatteryVoltage() {
        copyOnWrite();
        instance.clearBatteryVoltage();
        return this;
      }

      /**
       * <code>required uint32 imu_sys_calib_status = 2;</code>
       */
      public boolean hasImuSysCalibStatus() {
        return instance.hasImuSysCalibStatus();
      }
      /**
       * <code>required uint32 imu_sys_calib_status = 2;</code>
       */
      public int getImuSysCalibStatus() {
        return instance.getImuSysCalibStatus();
      }
      /**
       * <code>required uint32 imu_sys_calib_status = 2;</code>
       */
      public Builder setImuSysCalibStatus(int value) {
        copyOnWrite();
        instance.setImuSysCalibStatus(value);
        return this;
      }
      /**
       * <code>required uint32 imu_sys_calib_status = 2;</code>
       */
      public Builder clearImuSysCalibStatus() {
        copyOnWrite();
        instance.clearImuSysCalibStatus();
        return this;
      }

      /**
       * <code>required uint32 imu_mag_calib_status = 3;</code>
       */
      public boolean hasImuMagCalibStatus() {
        return instance.hasImuMagCalibStatus();
      }
      /**
       * <code>required uint32 imu_mag_calib_status = 3;</code>
       */
      public int getImuMagCalibStatus() {
        return instance.getImuMagCalibStatus();
      }
      /**
       * <code>required uint32 imu_mag_calib_status = 3;</code>
       */
      public Builder setImuMagCalibStatus(int value) {
        copyOnWrite();
        instance.setImuMagCalibStatus(value);
        return this;
      }
      /**
       * <code>required uint32 imu_mag_calib_status = 3;</code>
       */
      public Builder clearImuMagCalibStatus() {
        copyOnWrite();
        instance.clearImuMagCalibStatus();
        return this;
      }

      /**
       * <code>required uint32 imu_acc_calib_status = 4;</code>
       */
      public boolean hasImuAccCalibStatus() {
        return instance.hasImuAccCalibStatus();
      }
      /**
       * <code>required uint32 imu_acc_calib_status = 4;</code>
       */
      public int getImuAccCalibStatus() {
        return instance.getImuAccCalibStatus();
      }
      /**
       * <code>required uint32 imu_acc_calib_status = 4;</code>
       */
      public Builder setImuAccCalibStatus(int value) {
        copyOnWrite();
        instance.setImuAccCalibStatus(value);
        return this;
      }
      /**
       * <code>required uint32 imu_acc_calib_status = 4;</code>
       */
      public Builder clearImuAccCalibStatus() {
        copyOnWrite();
        instance.clearImuAccCalibStatus();
        return this;
      }

      /**
       * <code>required uint32 imu_gyro_calib_status = 5;</code>
       */
      public boolean hasImuGyroCalibStatus() {
        return instance.hasImuGyroCalibStatus();
      }
      /**
       * <code>required uint32 imu_gyro_calib_status = 5;</code>
       */
      public int getImuGyroCalibStatus() {
        return instance.getImuGyroCalibStatus();
      }
      /**
       * <code>required uint32 imu_gyro_calib_status = 5;</code>
       */
      public Builder setImuGyroCalibStatus(int value) {
        copyOnWrite();
        instance.setImuGyroCalibStatus(value);
        return this;
      }
      /**
       * <code>required uint32 imu_gyro_calib_status = 5;</code>
       */
      public Builder clearImuGyroCalibStatus() {
        copyOnWrite();
        instance.clearImuGyroCalibStatus();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:SBPStatus)
    }
    private byte memoizedIsInitialized = -1;
    protected final Object dynamicMethod(
        com.google.protobuf.GeneratedMessageLite.MethodToInvoke method,
        Object arg0, Object arg1) {
      switch (method) {
        case NEW_MUTABLE_INSTANCE: {
          return new com.example.signbuddy.SignBuddyProto.SBPStatus();
        }
        case IS_INITIALIZED: {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return DEFAULT_INSTANCE;
          if (isInitialized == 0) return null;

          boolean shouldMemoize = ((Boolean) arg0).booleanValue();
          if (!hasBatteryVoltage()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasImuSysCalibStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasImuMagCalibStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasImuAccCalibStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (!hasImuGyroCalibStatus()) {
            if (shouldMemoize) {
              memoizedIsInitialized = 0;
            }
            return null;
          }
          if (shouldMemoize) memoizedIsInitialized = 1;
          return DEFAULT_INSTANCE;

        }
        case MAKE_IMMUTABLE: {
          return null;
        }
        case NEW_BUILDER: {
          return new Builder();
        }
        case VISIT: {
          Visitor visitor = (Visitor) arg0;
          com.example.signbuddy.SignBuddyProto.SBPStatus other = (com.example.signbuddy.SignBuddyProto.SBPStatus) arg1;
          batteryVoltage_ = visitor.visitInt(
              hasBatteryVoltage(), batteryVoltage_,
              other.hasBatteryVoltage(), other.batteryVoltage_);
          imuSysCalibStatus_ = visitor.visitInt(
              hasImuSysCalibStatus(), imuSysCalibStatus_,
              other.hasImuSysCalibStatus(), other.imuSysCalibStatus_);
          imuMagCalibStatus_ = visitor.visitInt(
              hasImuMagCalibStatus(), imuMagCalibStatus_,
              other.hasImuMagCalibStatus(), other.imuMagCalibStatus_);
          imuAccCalibStatus_ = visitor.visitInt(
              hasImuAccCalibStatus(), imuAccCalibStatus_,
              other.hasImuAccCalibStatus(), other.imuAccCalibStatus_);
          imuGyroCalibStatus_ = visitor.visitInt(
              hasImuGyroCalibStatus(), imuGyroCalibStatus_,
              other.hasImuGyroCalibStatus(), other.imuGyroCalibStatus_);
          if (visitor == com.google.protobuf.GeneratedMessageLite.MergeFromVisitor
              .INSTANCE) {
            bitField0_ |= other.bitField0_;
          }
          return this;
        }
        case MERGE_FROM_STREAM: {
          com.google.protobuf.CodedInputStream input =
              (com.google.protobuf.CodedInputStream) arg0;
          com.google.protobuf.ExtensionRegistryLite extensionRegistry =
              (com.google.protobuf.ExtensionRegistryLite) arg1;
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                default: {
                  if (!parseUnknownField(tag, input)) {
                    done = true;
                  }
                  break;
                }
                case 8: {
                  bitField0_ |= 0x00000001;
                  batteryVoltage_ = input.readUInt32();
                  break;
                }
                case 16: {
                  bitField0_ |= 0x00000002;
                  imuSysCalibStatus_ = input.readUInt32();
                  break;
                }
                case 24: {
                  bitField0_ |= 0x00000004;
                  imuMagCalibStatus_ = input.readUInt32();
                  break;
                }
                case 32: {
                  bitField0_ |= 0x00000008;
                  imuAccCalibStatus_ = input.readUInt32();
                  break;
                }
                case 40: {
                  bitField0_ |= 0x00000010;
                  imuGyroCalibStatus_ = input.readUInt32();
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw new RuntimeException(e.setUnfinishedMessage(this));
          } catch (java.io.IOException e) {
            throw new RuntimeException(
                new com.google.protobuf.InvalidProtocolBufferException(
                    e.getMessage()).setUnfinishedMessage(this));
          } finally {
          }
        }
        case GET_DEFAULT_INSTANCE: {
          return DEFAULT_INSTANCE;
        }
        case GET_PARSER: {
          if (PARSER == null) {    synchronized (com.example.signbuddy.SignBuddyProto.SBPStatus.class) {
              if (PARSER == null) {
                PARSER = new DefaultInstanceBasedParser(DEFAULT_INSTANCE);
              }
            }
          }
          return PARSER;
        }
      }
      throw new UnsupportedOperationException();
    }


    // @@protoc_insertion_point(class_scope:SBPStatus)
    private static final com.example.signbuddy.SignBuddyProto.SBPStatus DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new SBPStatus();
      DEFAULT_INSTANCE.makeImmutable();
    }

    public static com.example.signbuddy.SignBuddyProto.SBPStatus getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static volatile com.google.protobuf.Parser<SBPStatus> PARSER;

    public static com.google.protobuf.Parser<SBPStatus> parser() {
      return DEFAULT_INSTANCE.getParserForType();
    }
  }


  static {
  }

  // @@protoc_insertion_point(outer_class_scope)
}
